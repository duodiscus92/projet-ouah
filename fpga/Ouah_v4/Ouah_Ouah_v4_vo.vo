
// Verilog netlist produced by program backanno, Version Radiant Software (64-bit) 3.2.0.18.0

// backanno -o Ouah_Ouah_v4_vo.vo -sp High-Performance_1.2V -w -neg -gui Ouah_Ouah_v4.udb 
// Netlist created on Sun Jun 18 04:23:35 2023
// Netlist written on Sun Jun 18 04:23:42 2023
// Design is for device iCE40UP5K
// Design is for package SG48
// Design is for performance grade High-Performance_1.2V

`timescale 1 ns / 1 ps

module ouah ( dcf77, pb0, clk, ledday, select7seg, segment, sframe, sdcf77, 
              pinms );
  input  dcf77, pb0, clk;
  output [6:0] ledday;
  output [3:0] select7seg;
  output [6:0] segment;
  output sframe, sdcf77, pinms;
  wire   n2912, n2102, pinms_c, n46_adj_1, n2909, \usecond_cntr[8] , n2100, 
         \usecond_cntr[7] , n48_adj_3, n47_adj_2, n2906, \usecond_cntr[6] , 
         n2098, \usecond_cntr[5] , n50_adj_5, n49_adj_4, n2903, 
         \usecond_cntr[4] , n2096, \usecond_cntr[3] , n52_2, n51, n2900, 
         \usecond_cntr[2] , n2094, \usecond_cntr[1] , n54_adj_7, n53_adj_6, 
         n2927, \cnt1500[2] , n2063, n19, n104, n103, n2065, n2897, 
         \usecond_cntr[0] , VCC_net, n55_adj_8, n2924, \cnt200[8] , n2090, 
         \cnt200[7] , n43, n42, n2921, \cnt200[6] , n2088, \cnt200[5] , n45_2, 
         n44, n2918, \cnt200[4] , n2086, \cnt200[3] , n47, n46, n2942, 
         \cnt1500[12] , n2073, \cnt1500[11] , n94, n93, n2075, n2933, 
         \cnt1500[6] , n2067, \cnt1500[5] , n100, n99, n2069, n2915, 
         \cnt200[2] , n2084, \cnt200[1] , n49, n48, n2894, n9, n50, n2939, 
         \cnt1500[10] , n2071, \cnt1500[9] , n96, n95, n2954, n2081, 
         \cnt1500[19] , n86, n2951, \cnt1500[18] , n2079, \cnt1500[17] , n88, 
         n87, n2948, \cnt1500[16] , n2077, \cnt1500[15] , n90, n89, n2945, 
         \cnt1500[14] , \cnt1500[13] , n92, n91, n2930, \cnt1500[4] , 
         \cnt1500[3] , n102, n101, n2891, n20, n105, n2936, \cnt1500[8] , 
         \cnt1500[7] , n98, n97, databit_N_259, n4_adj_13, pb0_N_249, sdcf77_c, 
         databit, \shiftreg[22].sig_002.FeedThruLUT , 
         \shiftreg[21].sig_000.FeedThruLUT , \shiftreg[22] , \shiftreg[21] , 
         n933, \memreg[21] , \memreg[22] , \n832.sig_001.FeedThruLUT , n832, 
         n835, \shiftreg[42].sig_006.FeedThruLUT , 
         \shiftreg[43].sig_003.FeedThruLUT , \shiftreg[42] , \shiftreg[43] , 
         \dow[1] , \dow[0] , \shiftreg[23].sig_043.FeedThruLUT , 
         \shiftreg[22].sig_004.FeedThruLUT , \shiftreg[23] , 
         \shiftreg[24].sig_056.FeedThruLUT , 
         \shiftreg[23].sig_005.FeedThruLUT , \shiftreg[24] , \memreg[23] , 
         \memreg[24] , n33, tick_cntr_max_N_248, \tick_cntr[4] , 
         \tick_cntr[3] , tick_cntr_max, n2045, \tick_cntr[0] , n2447, 
         \tick_cntr[2] , clk_c, n59_adj_10, usecond_cntr_max_N_251, 
         usecond_cntr_max, n2457, n36, n2170, \tick_cntr[1] , 
         \n833.sig_044.FeedThruLUT , n127, n833, n126, n61, n66, n67, 
         n58_adj_9, n61_adj_12, n60_adj_11, n63, n62, n65, n64, n54, n53, n56, 
         n55, n58, n57_2, n60, n59, n109, n108, n111, n110, n113, n112, n115, 
         n114, n117, n116, n119, n118, n121, n120, n123, n122, n125, n124, n35, 
         n34, \databit.sig_008.FeedThruLUT , \shiftreg[57] , 
         \shiftreg[56].sig_010.FeedThruLUT , 
         \shiftreg[57].sig_009.FeedThruLUT , \shiftreg[56] , \shiftreg[55] , 
         \shiftreg[54].sig_012.FeedThruLUT , 
         \shiftreg[55].sig_011.FeedThruLUT , \shiftreg[54] , \shiftreg[53] , 
         \shiftreg[52].sig_014.FeedThruLUT , 
         \shiftreg[53].sig_013.FeedThruLUT , \shiftreg[52] , \shiftreg[51] , 
         \shiftreg[50].sig_016.FeedThruLUT , 
         \shiftreg[51].sig_015.FeedThruLUT , \shiftreg[50] , \shiftreg[49] , 
         \shiftreg[48].sig_018.FeedThruLUT , 
         \shiftreg[49].sig_017.FeedThruLUT , \shiftreg[48] , \shiftreg[47] , 
         \shiftreg[46].sig_020.FeedThruLUT , 
         \shiftreg[47].sig_019.FeedThruLUT , \shiftreg[46] , \shiftreg[45] , 
         \shiftreg[44].sig_022.FeedThruLUT , 
         \shiftreg[45].sig_021.FeedThruLUT , \shiftreg[44] , 
         \shiftreg[42].sig_024.FeedThruLUT , 
         \shiftreg[43].sig_023.FeedThruLUT , \shiftreg[41] , 
         \shiftreg[40].sig_026.FeedThruLUT , 
         \shiftreg[41].sig_025.FeedThruLUT , \shiftreg[40] , \shiftreg[39] , 
         \shiftreg[38].sig_028.FeedThruLUT , 
         \shiftreg[39].sig_027.FeedThruLUT , \shiftreg[38] , \shiftreg[37] , 
         \shiftreg[36].sig_030.FeedThruLUT , 
         \shiftreg[37].sig_029.FeedThruLUT , \shiftreg[36] , \shiftreg[35] , 
         \shiftreg[34].sig_032.FeedThruLUT , 
         \shiftreg[35].sig_031.FeedThruLUT , \shiftreg[34] , \shiftreg[33] , 
         \shiftreg[32].sig_034.FeedThruLUT , 
         \shiftreg[33].sig_033.FeedThruLUT , \shiftreg[32] , \shiftreg[31] , 
         \shiftreg[30].sig_036.FeedThruLUT , 
         \shiftreg[31].sig_035.FeedThruLUT , \shiftreg[30] , \shiftreg[29] , 
         \shiftreg[28].sig_038.FeedThruLUT , 
         \shiftreg[29].sig_037.FeedThruLUT , \shiftreg[28] , \shiftreg[27] , 
         \shiftreg[26].sig_040.FeedThruLUT , 
         \shiftreg[27].sig_039.FeedThruLUT , \shiftreg[26] , \shiftreg[25] , 
         \shiftreg[24].sig_042.FeedThruLUT , 
         \shiftreg[25].sig_041.FeedThruLUT , \n835.sig_046.FeedThruLUT , 
         \n834.sig_045.FeedThruLUT , n834, \shiftreg[34].sig_047.FeedThruLUT , 
         \memreg[34] , \shiftreg[32].sig_049.FeedThruLUT , 
         \shiftreg[33].sig_048.FeedThruLUT , \memreg[33] , \memreg[32] , 
         \shiftreg[30].sig_051.FeedThruLUT , 
         \shiftreg[31].sig_050.FeedThruLUT , \memreg[31] , \memreg[30] , 
         \shiftreg[27].sig_053.FeedThruLUT , 
         \shiftreg[29].sig_052.FeedThruLUT , \memreg[29] , \memreg[27] , 
         \shiftreg[25].sig_055.FeedThruLUT , 
         \shiftreg[26].sig_054.FeedThruLUT , \memreg[26] , \memreg[25] , n999, 
         sframe_c, n2541, n1315, n1308, start_frame_N_256, n39, n868, n1041, 
         n1045, n9_adj_16, n1676, n1030, \bcd[0] , n1688, n4, n1293, n10, 
         n9_adj_15, n2239, \bcd[3] , \bcd[2] , n24, n2439, n21, segment_c_6, 
         n16, n1005, select7seg_c_3, n2545, n23, n2455, n12, n41_2, n2244, 
         n10_adj_14, n14, segment_c_0, n2540, n27, n6, segment_c_1, \dow[2] , 
         pb0_c, ledday_c_5, ledday_c_6, \shiftreg[44].sig_007.FeedThruLUT , 
         ledday_c_3, ledday_c_2, ledday_c_0, ledday_c_1, ledday_c_4, 
         segment_c_5, segment_c_4, segment_c_2, segment_c_3, select7seg_c_0, 
         select7seg_c_1, select7seg_c_2, dcf77_c;

  SLICE_0 SLICE_0( .D1(n2912), .D0(n2102), .C0(pinms_c), .CIN0(n2102), 
    .CIN1(n2912), .F0(n46_adj_1), .COUT0(n2912));
  SLICE_1 SLICE_1( .D1(n2909), .C1(\usecond_cntr[8] ), .D0(n2100), 
    .C0(\usecond_cntr[7] ), .CIN0(n2100), .CIN1(n2909), .F0(n48_adj_3), 
    .F1(n47_adj_2), .COUT1(n2102), .COUT0(n2909));
  SLICE_2 SLICE_2( .D1(n2906), .C1(\usecond_cntr[6] ), .D0(n2098), 
    .C0(\usecond_cntr[5] ), .CIN0(n2098), .CIN1(n2906), .F0(n50_adj_5), 
    .F1(n49_adj_4), .COUT1(n2100), .COUT0(n2906));
  SLICE_3 SLICE_3( .D1(n2903), .C1(\usecond_cntr[4] ), .D0(n2096), 
    .C0(\usecond_cntr[3] ), .CIN0(n2096), .CIN1(n2903), .F0(n52_2), .F1(n51), 
    .COUT1(n2098), .COUT0(n2903));
  SLICE_4 SLICE_4( .D1(n2900), .C1(\usecond_cntr[2] ), .D0(n2094), 
    .C0(\usecond_cntr[1] ), .CIN0(n2094), .CIN1(n2900), .F0(n54_adj_7), 
    .F1(n53_adj_6), .COUT1(n2096), .COUT0(n2900));
  SLICE_5 SLICE_5( .D1(n2927), .C1(\cnt1500[2] ), .D0(n2063), .C0(n19), 
    .CIN0(n2063), .CIN1(n2927), .F0(n104), .F1(n103), .COUT1(n2065), 
    .COUT0(n2927));
  SLICE_6 SLICE_6( .D1(n2897), .C1(\usecond_cntr[0] ), .B1(VCC_net), 
    .CIN1(n2897), .F1(n55_adj_8), .COUT1(n2094), .COUT0(n2897));
  SLICE_7 SLICE_7( .D1(n2924), .C1(\cnt200[8] ), .D0(n2090), .C0(\cnt200[7] ), 
    .CIN0(n2090), .CIN1(n2924), .F0(n43), .F1(n42), .COUT0(n2924));
  SLICE_8 SLICE_8( .D1(n2921), .C1(\cnt200[6] ), .D0(n2088), .C0(\cnt200[5] ), 
    .CIN0(n2088), .CIN1(n2921), .F0(n45_2), .F1(n44), .COUT1(n2090), 
    .COUT0(n2921));
  SLICE_9 SLICE_9( .D1(n2918), .C1(\cnt200[4] ), .D0(n2086), .C0(\cnt200[3] ), 
    .CIN0(n2086), .CIN1(n2918), .F0(n47), .F1(n46), .COUT1(n2088), 
    .COUT0(n2918));
  SLICE_10 SLICE_10( .D1(n2942), .C1(\cnt1500[12] ), .D0(n2073), 
    .C0(\cnt1500[11] ), .CIN0(n2073), .CIN1(n2942), .F0(n94), .F1(n93), 
    .COUT1(n2075), .COUT0(n2942));
  SLICE_11 SLICE_11( .D1(n2933), .C1(\cnt1500[6] ), .D0(n2067), 
    .C0(\cnt1500[5] ), .CIN0(n2067), .CIN1(n2933), .F0(n100), .F1(n99), 
    .COUT1(n2069), .COUT0(n2933));
  SLICE_12 SLICE_12( .D1(n2915), .C1(\cnt200[2] ), .D0(n2084), 
    .C0(\cnt200[1] ), .CIN0(n2084), .CIN1(n2915), .F0(n49), .F1(n48), 
    .COUT1(n2086), .COUT0(n2915));
  SLICE_13 SLICE_13( .D1(n2894), .C1(n9), .B1(VCC_net), .CIN1(n2894), .F1(n50), 
    .COUT1(n2084), .COUT0(n2894));
  SLICE_14 SLICE_14( .D1(n2939), .C1(\cnt1500[10] ), .D0(n2071), 
    .C0(\cnt1500[9] ), .CIN0(n2071), .CIN1(n2939), .F0(n96), .F1(n95), 
    .COUT1(n2073), .COUT0(n2939));
  SLICE_15 SLICE_15( .D1(n2954), .D0(n2081), .C0(\cnt1500[19] ), .CIN0(n2081), 
    .CIN1(n2954), .F0(n86), .COUT0(n2954));
  SLICE_16 SLICE_16( .D1(n2951), .C1(\cnt1500[18] ), .D0(n2079), 
    .C0(\cnt1500[17] ), .CIN0(n2079), .CIN1(n2951), .F0(n88), .F1(n87), 
    .COUT1(n2081), .COUT0(n2951));
  SLICE_17 SLICE_17( .D1(n2948), .C1(\cnt1500[16] ), .D0(n2077), 
    .C0(\cnt1500[15] ), .CIN0(n2077), .CIN1(n2948), .F0(n90), .F1(n89), 
    .COUT1(n2079), .COUT0(n2948));
  SLICE_18 SLICE_18( .D1(n2945), .C1(\cnt1500[14] ), .D0(n2075), 
    .C0(\cnt1500[13] ), .CIN0(n2075), .CIN1(n2945), .F0(n92), .F1(n91), 
    .COUT1(n2077), .COUT0(n2945));
  SLICE_19 SLICE_19( .D1(n2930), .C1(\cnt1500[4] ), .D0(n2065), 
    .C0(\cnt1500[3] ), .CIN0(n2065), .CIN1(n2930), .F0(n102), .F1(n101), 
    .COUT1(n2067), .COUT0(n2930));
  SLICE_20 SLICE_20( .D1(n2891), .C1(n20), .B1(VCC_net), .CIN1(n2891), 
    .F1(n105), .COUT1(n2063), .COUT0(n2891));
  SLICE_21 SLICE_21( .D1(n2936), .C1(\cnt1500[8] ), .D0(n2069), 
    .C0(\cnt1500[7] ), .CIN0(n2069), .CIN1(n2936), .F0(n98), .F1(n97), 
    .COUT1(n2071), .COUT0(n2936));
  SLICE_22 SLICE_22( .DI0(databit_N_259), .D0(\cnt200[6] ), .C0(n4_adj_13), 
    .B0(\cnt200[8] ), .A0(\cnt200[7] ), .LSR(pb0_N_249), .CLK(sdcf77_c), 
    .Q0(databit), .F0(databit_N_259));
  SLICE_23 SLICE_23( .DI1(\shiftreg[22].sig_002.FeedThruLUT ), 
    .DI0(\shiftreg[21].sig_000.FeedThruLUT ), .B1(\shiftreg[22] ), 
    .B0(\shiftreg[21] ), .CE(n933), .CLK(pinms_c), .Q0(\memreg[21] ), 
    .Q1(\memreg[22] ), .F0(\shiftreg[21].sig_000.FeedThruLUT ), 
    .F1(\shiftreg[22].sig_002.FeedThruLUT ));
  SLICE_24 SLICE_24( .DI0(\n832.sig_001.FeedThruLUT ), .B0(n832), 
    .LSR(pb0_N_249), .CLK(pinms_c), .Q0(n835), .F0(\n832.sig_001.FeedThruLUT ));
  SLICE_26 SLICE_26( .DI1(\shiftreg[42].sig_006.FeedThruLUT ), 
    .DI0(\shiftreg[43].sig_003.FeedThruLUT ), .D1(\shiftreg[42] ), 
    .A0(\shiftreg[43] ), .CE(n933), .CLK(pinms_c), .Q0(\dow[1] ), 
    .Q1(\dow[0] ), .F0(\shiftreg[43].sig_003.FeedThruLUT ), 
    .F1(\shiftreg[42].sig_006.FeedThruLUT ));
  SLICE_27 SLICE_27( .DI1(\shiftreg[23].sig_043.FeedThruLUT ), 
    .DI0(\shiftreg[22].sig_004.FeedThruLUT ), .D1(\shiftreg[23] ), 
    .C0(\shiftreg[22] ), .LSR(pb0_N_249), .CLK(sdcf77_c), .Q0(\shiftreg[21] ), 
    .Q1(\shiftreg[22] ), .F0(\shiftreg[22].sig_004.FeedThruLUT ), 
    .F1(\shiftreg[23].sig_043.FeedThruLUT ));
  SLICE_28 SLICE_28( .DI1(\shiftreg[24].sig_056.FeedThruLUT ), 
    .DI0(\shiftreg[23].sig_005.FeedThruLUT ), .B1(\shiftreg[24] ), 
    .A0(\shiftreg[23] ), .CE(n933), .CLK(pinms_c), .Q0(\memreg[23] ), 
    .Q1(\memreg[24] ), .F0(\shiftreg[23].sig_005.FeedThruLUT ), 
    .F1(\shiftreg[24].sig_056.FeedThruLUT ));
  SLICE_30 SLICE_30( .DI1(n33), .DI0(tick_cntr_max_N_248), .D1(\tick_cntr[4] ), 
    .C1(\tick_cntr[3] ), .B1(tick_cntr_max), .A1(n2045), .D0(\tick_cntr[0] ), 
    .C0(\tick_cntr[4] ), .B0(n2447), .A0(\tick_cntr[2] ), .LSR(pb0_N_249), 
    .CLK(clk_c), .Q0(tick_cntr_max), .Q1(\tick_cntr[4] ), 
    .F0(tick_cntr_max_N_248), .F1(n33));
  SLICE_31 SLICE_31( .DI1(n59_adj_10), .DI0(usecond_cntr_max_N_251), 
    .C1(n47_adj_2), .A1(usecond_cntr_max), .D0(n2457), .C0(\usecond_cntr[4] ), 
    .B0(\usecond_cntr[0] ), .A0(\usecond_cntr[3] ), .CE(tick_cntr_max), 
    .LSR(pb0_N_249), .CLK(clk_c), .Q0(usecond_cntr_max), 
    .Q1(\usecond_cntr[8] ), .F0(usecond_cntr_max_N_251), .F1(n59_adj_10));
  SLICE_32 SLICE_32( .DI1(n36), .DI0(n2170), .D1(tick_cntr_max), 
    .B1(\tick_cntr[1] ), .A1(\tick_cntr[0] ), .B0(\tick_cntr[0] ), 
    .A0(tick_cntr_max), .LSR(pb0_N_249), .CLK(clk_c), .Q0(\tick_cntr[0] ), 
    .Q1(\tick_cntr[1] ), .F0(n2170), .F1(n36));
  SLICE_33 SLICE_33( .DI1(\n833.sig_044.FeedThruLUT ), .DI0(n127), .A1(n833), 
    .C0(sdcf77_c), .A0(n105), .LSR(pb0_N_249), .CLK(pinms_c), .Q0(n20), 
    .Q1(n832), .F0(n127), .F1(\n833.sig_044.FeedThruLUT ));
  SLICE_34 SLICE_34( .DI1(n126), .DI0(n61), .D1(n104), .B1(sdcf77_c), .C0(n50), 
    .A0(sdcf77_c), .LSR(pb0_N_249), .CLK(pinms_c), .Q0(n9), .Q1(n19), .F0(n61), 
    .F1(n126));
  SLICE_36 SLICE_36( .DI1(n66), .DI0(n67), .C1(usecond_cntr_max), 
    .B1(n54_adj_7), .C0(n55_adj_8), .B0(usecond_cntr_max), .CE(tick_cntr_max), 
    .LSR(pb0_N_249), .CLK(clk_c), .Q0(\usecond_cntr[0] ), 
    .Q1(\usecond_cntr[1] ), .F0(n67), .F1(n66));
  SLICE_37 SLICE_37( .DI0(n58_adj_9), .D0(n46_adj_1), .A0(usecond_cntr_max), 
    .CE(tick_cntr_max), .LSR(pb0_N_249), .CLK(clk_c), .Q0(pinms_c), 
    .F0(n58_adj_9));
  SLICE_39 SLICE_39( .DI1(n61_adj_12), .DI0(n60_adj_11), .D1(n49_adj_4), 
    .B1(usecond_cntr_max), .D0(n48_adj_3), .A0(usecond_cntr_max), 
    .CE(tick_cntr_max), .LSR(pb0_N_249), .CLK(clk_c), .Q0(\usecond_cntr[7] ), 
    .Q1(\usecond_cntr[6] ), .F0(n60_adj_11), .F1(n61_adj_12));
  SLICE_41 SLICE_41( .DI1(n63), .DI0(n62), .C1(usecond_cntr_max), .B1(n51), 
    .C0(n50_adj_5), .B0(usecond_cntr_max), .CE(tick_cntr_max), .LSR(pb0_N_249), 
    .CLK(clk_c), .Q0(\usecond_cntr[5] ), .Q1(\usecond_cntr[4] ), .F0(n62), 
    .F1(n63));
  SLICE_43 SLICE_43( .DI1(n65), .DI0(n64), .D1(n53_adj_6), 
    .C1(usecond_cntr_max), .B0(usecond_cntr_max), .A0(n52_2), 
    .CE(tick_cntr_max), .LSR(pb0_N_249), .CLK(clk_c), .Q0(\usecond_cntr[3] ), 
    .Q1(\usecond_cntr[2] ), .F0(n64), .F1(n65));
  SLICE_46 SLICE_46( .DI1(n54), .DI0(n53), .D1(sdcf77_c), .A1(n43), .C0(n42), 
    .A0(sdcf77_c), .LSR(pb0_N_249), .CLK(pinms_c), .Q0(\cnt200[8] ), 
    .Q1(\cnt200[7] ), .F0(n53), .F1(n54));
  SLICE_48 SLICE_48( .DI1(n56), .DI0(n55), .D1(sdcf77_c), .B1(n45_2), .C0(n44), 
    .A0(sdcf77_c), .LSR(pb0_N_249), .CLK(pinms_c), .Q0(\cnt200[6] ), 
    .Q1(\cnt200[5] ), .F0(n55), .F1(n56));
  SLICE_50 SLICE_50( .DI1(n58), .DI0(n57_2), .D1(sdcf77_c), .A1(n47), .C0(n46), 
    .A0(sdcf77_c), .LSR(pb0_N_249), .CLK(pinms_c), .Q0(\cnt200[4] ), 
    .Q1(\cnt200[3] ), .F0(n57_2), .F1(n58));
  SLICE_52 SLICE_52( .DI1(n60), .DI0(n59), .D1(sdcf77_c), .C1(n49), .C0(n48), 
    .A0(sdcf77_c), .LSR(pb0_N_249), .CLK(pinms_c), .Q0(\cnt200[2] ), 
    .Q1(\cnt200[1] ), .F0(n59), .F1(n60));
  SLICE_54 SLICE_54( .DI1(n109), .DI0(n108), .D1(n87), .C1(sdcf77_c), 
    .D0(sdcf77_c), .B0(n86), .LSR(pb0_N_249), .CLK(pinms_c), 
    .Q0(\cnt1500[19] ), .Q1(\cnt1500[18] ), .F0(n108), .F1(n109));
  SLICE_56 SLICE_56( .DI1(n111), .DI0(n110), .B1(n89), .A1(sdcf77_c), .D0(n88), 
    .B0(sdcf77_c), .LSR(pb0_N_249), .CLK(pinms_c), .Q0(\cnt1500[17] ), 
    .Q1(\cnt1500[16] ), .F0(n110), .F1(n111));
  SLICE_58 SLICE_58( .DI1(n113), .DI0(n112), .C1(sdcf77_c), .A1(n91), 
    .B0(sdcf77_c), .A0(n90), .LSR(pb0_N_249), .CLK(pinms_c), 
    .Q0(\cnt1500[15] ), .Q1(\cnt1500[14] ), .F0(n112), .F1(n113));
  SLICE_60 SLICE_60( .DI1(n115), .DI0(n114), .D1(n93), .B1(sdcf77_c), 
    .C0(sdcf77_c), .A0(n92), .LSR(pb0_N_249), .CLK(pinms_c), 
    .Q0(\cnt1500[13] ), .Q1(\cnt1500[12] ), .F0(n114), .F1(n115));
  SLICE_62 SLICE_62( .DI1(n117), .DI0(n116), .B1(sdcf77_c), .A1(n95), .D0(n94), 
    .A0(sdcf77_c), .LSR(pb0_N_249), .CLK(pinms_c), .Q0(\cnt1500[11] ), 
    .Q1(\cnt1500[10] ), .F0(n116), .F1(n117));
  SLICE_64 SLICE_64( .DI1(n119), .DI0(n118), .C1(n97), .B1(sdcf77_c), .D0(n96), 
    .C0(sdcf77_c), .LSR(pb0_N_249), .CLK(pinms_c), .Q0(\cnt1500[9] ), 
    .Q1(\cnt1500[8] ), .F0(n118), .F1(n119));
  SLICE_66 SLICE_66( .DI1(n121), .DI0(n120), .D1(n99), .B1(sdcf77_c), .D0(n98), 
    .A0(sdcf77_c), .LSR(pb0_N_249), .CLK(pinms_c), .Q0(\cnt1500[7] ), 
    .Q1(\cnt1500[6] ), .F0(n120), .F1(n121));
  SLICE_68 SLICE_68( .DI1(n123), .DI0(n122), .D1(sdcf77_c), .B1(n101), 
    .D0(n100), .A0(sdcf77_c), .LSR(pb0_N_249), .CLK(pinms_c), 
    .Q0(\cnt1500[5] ), .Q1(\cnt1500[4] ), .F0(n122), .F1(n123));
  SLICE_70 SLICE_70( .DI1(n125), .DI0(n124), .D1(sdcf77_c), .B1(n103), 
    .B0(n102), .A0(sdcf77_c), .LSR(pb0_N_249), .CLK(pinms_c), 
    .Q0(\cnt1500[3] ), .Q1(\cnt1500[2] ), .F0(n124), .F1(n125));
  SLICE_74 SLICE_74( .DI1(n35), .DI0(n34), .D1(\tick_cntr[2] ), 
    .C1(\tick_cntr[0] ), .B1(\tick_cntr[1] ), .A1(tick_cntr_max), .D0(n2045), 
    .B0(\tick_cntr[3] ), .A0(tick_cntr_max), .LSR(pb0_N_249), .CLK(clk_c), 
    .Q0(\tick_cntr[3] ), .Q1(\tick_cntr[2] ), .F0(n34), .F1(n35));
  SLICE_77 SLICE_77( .DI0(\databit.sig_008.FeedThruLUT ), .C0(databit), 
    .LSR(pb0_N_249), .CLK(sdcf77_c), .Q0(\shiftreg[57] ), 
    .F0(\databit.sig_008.FeedThruLUT ));
  SLICE_78 SLICE_78( .DI1(\shiftreg[56].sig_010.FeedThruLUT ), 
    .DI0(\shiftreg[57].sig_009.FeedThruLUT ), .A1(\shiftreg[56] ), 
    .D0(\shiftreg[57] ), .LSR(pb0_N_249), .CLK(sdcf77_c), .Q0(\shiftreg[56] ), 
    .Q1(\shiftreg[55] ), .F0(\shiftreg[57].sig_009.FeedThruLUT ), 
    .F1(\shiftreg[56].sig_010.FeedThruLUT ));
  SLICE_80 SLICE_80( .DI1(\shiftreg[54].sig_012.FeedThruLUT ), 
    .DI0(\shiftreg[55].sig_011.FeedThruLUT ), .A1(\shiftreg[54] ), 
    .C0(\shiftreg[55] ), .LSR(pb0_N_249), .CLK(sdcf77_c), .Q0(\shiftreg[54] ), 
    .Q1(\shiftreg[53] ), .F0(\shiftreg[55].sig_011.FeedThruLUT ), 
    .F1(\shiftreg[54].sig_012.FeedThruLUT ));
  SLICE_82 SLICE_82( .DI1(\shiftreg[52].sig_014.FeedThruLUT ), 
    .DI0(\shiftreg[53].sig_013.FeedThruLUT ), .C1(\shiftreg[52] ), 
    .C0(\shiftreg[53] ), .LSR(pb0_N_249), .CLK(sdcf77_c), .Q0(\shiftreg[52] ), 
    .Q1(\shiftreg[51] ), .F0(\shiftreg[53].sig_013.FeedThruLUT ), 
    .F1(\shiftreg[52].sig_014.FeedThruLUT ));
  SLICE_84 SLICE_84( .DI1(\shiftreg[50].sig_016.FeedThruLUT ), 
    .DI0(\shiftreg[51].sig_015.FeedThruLUT ), .A1(\shiftreg[50] ), 
    .A0(\shiftreg[51] ), .LSR(pb0_N_249), .CLK(sdcf77_c), .Q0(\shiftreg[50] ), 
    .Q1(\shiftreg[49] ), .F0(\shiftreg[51].sig_015.FeedThruLUT ), 
    .F1(\shiftreg[50].sig_016.FeedThruLUT ));
  SLICE_86 SLICE_86( .DI1(\shiftreg[48].sig_018.FeedThruLUT ), 
    .DI0(\shiftreg[49].sig_017.FeedThruLUT ), .A1(\shiftreg[48] ), 
    .A0(\shiftreg[49] ), .LSR(pb0_N_249), .CLK(sdcf77_c), .Q0(\shiftreg[48] ), 
    .Q1(\shiftreg[47] ), .F0(\shiftreg[49].sig_017.FeedThruLUT ), 
    .F1(\shiftreg[48].sig_018.FeedThruLUT ));
  SLICE_88 SLICE_88( .DI1(\shiftreg[46].sig_020.FeedThruLUT ), 
    .DI0(\shiftreg[47].sig_019.FeedThruLUT ), .A1(\shiftreg[46] ), 
    .C0(\shiftreg[47] ), .LSR(pb0_N_249), .CLK(sdcf77_c), .Q0(\shiftreg[46] ), 
    .Q1(\shiftreg[45] ), .F0(\shiftreg[47].sig_019.FeedThruLUT ), 
    .F1(\shiftreg[46].sig_020.FeedThruLUT ));
  SLICE_90 SLICE_90( .DI1(\shiftreg[44].sig_022.FeedThruLUT ), 
    .DI0(\shiftreg[45].sig_021.FeedThruLUT ), .C1(\shiftreg[44] ), 
    .C0(\shiftreg[45] ), .LSR(pb0_N_249), .CLK(sdcf77_c), .Q0(\shiftreg[44] ), 
    .Q1(\shiftreg[43] ), .F0(\shiftreg[45].sig_021.FeedThruLUT ), 
    .F1(\shiftreg[44].sig_022.FeedThruLUT ));
  SLICE_92 SLICE_92( .DI1(\shiftreg[42].sig_024.FeedThruLUT ), 
    .DI0(\shiftreg[43].sig_023.FeedThruLUT ), .A1(\shiftreg[42] ), 
    .C0(\shiftreg[43] ), .LSR(pb0_N_249), .CLK(sdcf77_c), .Q0(\shiftreg[42] ), 
    .Q1(\shiftreg[41] ), .F0(\shiftreg[43].sig_023.FeedThruLUT ), 
    .F1(\shiftreg[42].sig_024.FeedThruLUT ));
  SLICE_94 SLICE_94( .DI1(\shiftreg[40].sig_026.FeedThruLUT ), 
    .DI0(\shiftreg[41].sig_025.FeedThruLUT ), .A1(\shiftreg[40] ), 
    .A0(\shiftreg[41] ), .LSR(pb0_N_249), .CLK(sdcf77_c), .Q0(\shiftreg[40] ), 
    .Q1(\shiftreg[39] ), .F0(\shiftreg[41].sig_025.FeedThruLUT ), 
    .F1(\shiftreg[40].sig_026.FeedThruLUT ));
  SLICE_96 SLICE_96( .DI1(\shiftreg[38].sig_028.FeedThruLUT ), 
    .DI0(\shiftreg[39].sig_027.FeedThruLUT ), .A1(\shiftreg[38] ), 
    .C0(\shiftreg[39] ), .LSR(pb0_N_249), .CLK(sdcf77_c), .Q0(\shiftreg[38] ), 
    .Q1(\shiftreg[37] ), .F0(\shiftreg[39].sig_027.FeedThruLUT ), 
    .F1(\shiftreg[38].sig_028.FeedThruLUT ));
  SLICE_98 SLICE_98( .DI1(\shiftreg[36].sig_030.FeedThruLUT ), 
    .DI0(\shiftreg[37].sig_029.FeedThruLUT ), .A1(\shiftreg[36] ), 
    .C0(\shiftreg[37] ), .LSR(pb0_N_249), .CLK(sdcf77_c), .Q0(\shiftreg[36] ), 
    .Q1(\shiftreg[35] ), .F0(\shiftreg[37].sig_029.FeedThruLUT ), 
    .F1(\shiftreg[36].sig_030.FeedThruLUT ));
  SLICE_100 SLICE_100( .DI1(\shiftreg[34].sig_032.FeedThruLUT ), 
    .DI0(\shiftreg[35].sig_031.FeedThruLUT ), .A1(\shiftreg[34] ), 
    .D0(\shiftreg[35] ), .LSR(pb0_N_249), .CLK(sdcf77_c), .Q0(\shiftreg[34] ), 
    .Q1(\shiftreg[33] ), .F0(\shiftreg[35].sig_031.FeedThruLUT ), 
    .F1(\shiftreg[34].sig_032.FeedThruLUT ));
  SLICE_102 SLICE_102( .DI1(\shiftreg[32].sig_034.FeedThruLUT ), 
    .DI0(\shiftreg[33].sig_033.FeedThruLUT ), .C1(\shiftreg[32] ), 
    .A0(\shiftreg[33] ), .LSR(pb0_N_249), .CLK(sdcf77_c), .Q0(\shiftreg[32] ), 
    .Q1(\shiftreg[31] ), .F0(\shiftreg[33].sig_033.FeedThruLUT ), 
    .F1(\shiftreg[32].sig_034.FeedThruLUT ));
  SLICE_104 SLICE_104( .DI1(\shiftreg[30].sig_036.FeedThruLUT ), 
    .DI0(\shiftreg[31].sig_035.FeedThruLUT ), .A1(\shiftreg[30] ), 
    .A0(\shiftreg[31] ), .LSR(pb0_N_249), .CLK(sdcf77_c), .Q0(\shiftreg[30] ), 
    .Q1(\shiftreg[29] ), .F0(\shiftreg[31].sig_035.FeedThruLUT ), 
    .F1(\shiftreg[30].sig_036.FeedThruLUT ));
  SLICE_106 SLICE_106( .DI1(\shiftreg[28].sig_038.FeedThruLUT ), 
    .DI0(\shiftreg[29].sig_037.FeedThruLUT ), .C1(\shiftreg[28] ), 
    .C0(\shiftreg[29] ), .LSR(pb0_N_249), .CLK(sdcf77_c), .Q0(\shiftreg[28] ), 
    .Q1(\shiftreg[27] ), .F0(\shiftreg[29].sig_037.FeedThruLUT ), 
    .F1(\shiftreg[28].sig_038.FeedThruLUT ));
  SLICE_108 SLICE_108( .DI1(\shiftreg[26].sig_040.FeedThruLUT ), 
    .DI0(\shiftreg[27].sig_039.FeedThruLUT ), .A1(\shiftreg[26] ), 
    .A0(\shiftreg[27] ), .LSR(pb0_N_249), .CLK(sdcf77_c), .Q0(\shiftreg[26] ), 
    .Q1(\shiftreg[25] ), .F0(\shiftreg[27].sig_039.FeedThruLUT ), 
    .F1(\shiftreg[26].sig_040.FeedThruLUT ));
  SLICE_110 SLICE_110( .DI1(\shiftreg[24].sig_042.FeedThruLUT ), 
    .DI0(\shiftreg[25].sig_041.FeedThruLUT ), .C1(\shiftreg[24] ), 
    .A0(\shiftreg[25] ), .LSR(pb0_N_249), .CLK(sdcf77_c), .Q0(\shiftreg[24] ), 
    .Q1(\shiftreg[23] ), .F0(\shiftreg[25].sig_041.FeedThruLUT ), 
    .F1(\shiftreg[24].sig_042.FeedThruLUT ));
  SLICE_115 SLICE_115( .DI1(\n835.sig_046.FeedThruLUT ), 
    .DI0(\n834.sig_045.FeedThruLUT ), .A1(n835), .C0(n834), .LSR(pb0_N_249), 
    .CLK(pinms_c), .Q0(n833), .Q1(n834), .F0(\n834.sig_045.FeedThruLUT ), 
    .F1(\n835.sig_046.FeedThruLUT ));
  SLICE_117 SLICE_117( .DI0(\shiftreg[34].sig_047.FeedThruLUT ), 
    .C0(\shiftreg[34] ), .CE(n933), .CLK(pinms_c), .Q0(\memreg[34] ), 
    .F0(\shiftreg[34].sig_047.FeedThruLUT ));
  SLICE_118 SLICE_118( .DI1(\shiftreg[32].sig_049.FeedThruLUT ), 
    .DI0(\shiftreg[33].sig_048.FeedThruLUT ), .D1(\shiftreg[32] ), 
    .A0(\shiftreg[33] ), .CE(n933), .CLK(pinms_c), .Q0(\memreg[33] ), 
    .Q1(\memreg[32] ), .F0(\shiftreg[33].sig_048.FeedThruLUT ), 
    .F1(\shiftreg[32].sig_049.FeedThruLUT ));
  SLICE_120 SLICE_120( .DI1(\shiftreg[30].sig_051.FeedThruLUT ), 
    .DI0(\shiftreg[31].sig_050.FeedThruLUT ), .D1(\shiftreg[30] ), 
    .A0(\shiftreg[31] ), .CE(n933), .CLK(pinms_c), .Q0(\memreg[31] ), 
    .Q1(\memreg[30] ), .F0(\shiftreg[31].sig_050.FeedThruLUT ), 
    .F1(\shiftreg[30].sig_051.FeedThruLUT ));
  SLICE_122 SLICE_122( .DI1(\shiftreg[27].sig_053.FeedThruLUT ), 
    .DI0(\shiftreg[29].sig_052.FeedThruLUT ), .C1(\shiftreg[27] ), 
    .A0(\shiftreg[29] ), .CE(n933), .CLK(pinms_c), .Q0(\memreg[29] ), 
    .Q1(\memreg[27] ), .F0(\shiftreg[29].sig_052.FeedThruLUT ), 
    .F1(\shiftreg[27].sig_053.FeedThruLUT ));
  SLICE_124 SLICE_124( .DI1(\shiftreg[25].sig_055.FeedThruLUT ), 
    .DI0(\shiftreg[26].sig_054.FeedThruLUT ), .D1(\shiftreg[25] ), 
    .A0(\shiftreg[26] ), .CE(n933), .CLK(pinms_c), .Q0(\memreg[26] ), 
    .Q1(\memreg[25] ), .F0(\shiftreg[26].sig_054.FeedThruLUT ), 
    .F1(\shiftreg[25].sig_055.FeedThruLUT ));
  SLICE_127 SLICE_127( .D1(\memreg[26] ), .C1(n999), .D0(n833), .C0(n834), 
    .B0(n832), .A0(sframe_c), .F0(n999), .F1(n2541));
  SLICE_128 SLICE_128( .DI1(n1315), .D1(sframe_c), .C1(n1308), 
    .B1(start_frame_N_256), .A1(sdcf77_c), .D0(n832), .C0(sframe_c), .B0(n999), 
    .A0(\memreg[34] ), .LSR(pb0_N_249), .CLK(pinms_c), .Q1(sframe_c), .F0(n39), 
    .F1(n1315));
  SLICE_129 SLICE_129( .D1(sframe_c), .C1(\memreg[25] ), .B1(n999), .A1(n868), 
    .D0(n832), .C0(n833), .F0(n868), .F1(n1041));
  SLICE_130 SLICE_130( .D1(n1045), .C1(n9_adj_16), .B1(n1676), .A1(n1030), 
    .D0(\memreg[33] ), .C0(n1041), .B0(n832), .A0(sframe_c), .F0(n1045), 
    .F1(\bcd[0] ));
  SLICE_131 SLICE_131( .C1(n1688), .B1(n4), .D0(n1293), .C0(n10), 
    .B0(n9_adj_15), .A0(\cnt1500[11] ), .F0(n1688), .F1(n1308));
  SLICE_132 SLICE_132( .D1(n1293), .C1(n4), .A1(n1688), .D0(\cnt1500[10] ), 
    .C0(\cnt1500[11] ), .B0(\cnt1500[9] ), .A0(n2239), .F0(n4), 
    .F1(start_frame_N_256));
  SLICE_133 SLICE_133( .D1(\bcd[3] ), .C1(\bcd[2] ), .B1(n24), .A1(\bcd[0] ), 
    .D0(n2439), .C0(n21), .B0(n832), .A0(sframe_c), .F0(\bcd[2] ), 
    .F1(segment_c_6));
  SLICE_134 SLICE_134( .D1(n832), .C1(\memreg[31] ), .B1(n833), .A1(n16), 
    .D0(\memreg[27] ), .C0(n834), .B0(\memreg[23] ), .F0(n16), .F1(n21));
  SLICE_135 SLICE_135( .A1(n832), .C0(sframe_c), .B0(n832), .F0(n1005), 
    .F1(select7seg_c_3));
  SLICE_136 SLICE_136( .D1(n1005), .C1(n2545), .B1(n868), .A1(\memreg[32] ), 
    .D0(\memreg[24] ), .C0(sframe_c), .B0(n832), .A0(n834), .F0(n2545), 
    .F1(n23));
  SLICE_137 SLICE_137( .D1(\usecond_cntr[8] ), .C1(n2455), 
    .B1(\usecond_cntr[1] ), .A1(pinms_c), .D0(\usecond_cntr[6] ), 
    .C0(\usecond_cntr[2] ), .B0(\usecond_cntr[5] ), .A0(\usecond_cntr[7] ), 
    .F0(n2455), .F1(n2457));
  SLICE_140 SLICE_140( .D1(n832), .C1(n834), .B1(sframe_c), .A1(n833), 
    .D0(n834), .C0(sframe_c), .B0(n833), .A0(n832), .F0(n1676), .F1(n9_adj_16));
  SLICE_141 SLICE_141( .D1(\cnt1500[6] ), .C1(n12), .B1(\cnt1500[7] ), 
    .A1(\cnt1500[8] ), .D0(\cnt1500[2] ), .C0(\cnt1500[4] ), .B0(\cnt1500[3] ), 
    .A0(\cnt1500[5] ), .F0(n12), .F1(n2239));
  SLICE_145 SLICE_145( .D1(sframe_c), .C1(n2439), .B1(n868), .A1(\memreg[30] ), 
    .D0(n833), .B0(n834), .F0(n2439), .F1(n41_2));
  SLICE_147 SLICE_147( .D1(\cnt1500[7] ), .C1(n2244), .B1(\cnt1500[8] ), 
    .A1(\cnt1500[9] ), .D0(\cnt1500[2] ), .C0(\cnt1500[3] ), .B0(\cnt1500[4] ), 
    .A0(\cnt1500[5] ), .F0(n2244), .F1(n10));
  SLICE_149 SLICE_149( .C0(\cnt1500[18] ), .A0(\cnt1500[17] ), .F0(n10_adj_14));
  SLICE_150 SLICE_150( .D1(\cnt1500[19] ), .C1(n14), .B1(\cnt1500[15] ), 
    .A1(n10_adj_14), .D0(\cnt1500[16] ), .C0(\cnt1500[14] ), 
    .B0(\cnt1500[13] ), .A0(\cnt1500[12] ), .F0(n14), .F1(n1293));
  SLICE_151 SLICE_151( .D1(\bcd[2] ), .C1(\bcd[3] ), .B1(n24), .A1(\bcd[0] ), 
    .C0(n23), .A0(sframe_c), .F0(\bcd[3] ), .F1(segment_c_0));
  SLICE_154 SLICE_154( .D1(n2541), .C1(n2540), .B1(n834), .A1(n868), 
    .C0(\memreg[22] ), .A0(sframe_c), .F0(n2540), .F1(n27));
  SLICE_155 SLICE_155( .D1(\cnt200[5] ), .C1(n6), .B1(\cnt200[3] ), 
    .A1(\cnt200[4] ), .C0(\cnt200[1] ), .B0(\cnt200[2] ), .F0(n6), 
    .F1(n4_adj_13));
  SLICE_158 SLICE_158( .D1(\bcd[2] ), .C1(n24), .B1(\bcd[0] ), .A1(\bcd[3] ), 
    .D0(n832), .C0(n39), .B0(n41_2), .A0(n27), .F0(n24), .F1(segment_c_1));
  SLICE_159 SLICE_159( .D1(\dow[0] ), .C1(\dow[2] ), .B1(pb0_c), .A1(\dow[1] ), 
    .D0(\dow[2] ), .C0(\dow[0] ), .B0(\dow[1] ), .A0(pb0_c), .F0(ledday_c_5), 
    .F1(ledday_c_6));
  SLICE_160 SLICE_160( .DI1(\shiftreg[44].sig_007.FeedThruLUT ), 
    .D1(\shiftreg[44] ), .D0(pb0_c), .C0(\dow[0] ), .B0(\dow[1] ), 
    .A0(\dow[2] ), .CE(n933), .CLK(pinms_c), .Q1(\dow[2] ), .F0(ledday_c_3), 
    .F1(\shiftreg[44].sig_007.FeedThruLUT ));
  SLICE_162 SLICE_162( .D1(pb0_c), .C1(\dow[1] ), .B1(\dow[0] ), .A1(\dow[2] ), 
    .D0(\dow[1] ), .C0(pb0_c), .B0(\dow[2] ), .A0(\dow[0] ), .F0(ledday_c_2), 
    .F1(ledday_c_0));
  SLICE_164 SLICE_164( .D1(\dow[0] ), .C1(\dow[1] ), .B1(pb0_c), .A1(\dow[2] ), 
    .D0(\dow[2] ), .C0(pb0_c), .B0(\dow[1] ), .A0(\dow[0] ), .F0(ledday_c_1), 
    .F1(ledday_c_4));
  SLICE_165 SLICE_165( .D1(n24), .C1(\bcd[2] ), .B1(\bcd[0] ), .A1(\bcd[3] ), 
    .D0(\bcd[3] ), .C0(n24), .B0(\bcd[2] ), .A0(\bcd[0] ), .F0(segment_c_5), 
    .F1(segment_c_4));
  SLICE_168 SLICE_168( .D1(\bcd[2] ), .C1(\bcd[0] ), .B1(n24), .A1(\bcd[3] ), 
    .D0(\bcd[0] ), .C0(\bcd[2] ), .B0(\bcd[3] ), .A0(n24), .F0(segment_c_2), 
    .F1(segment_c_3));
  SLICE_169 SLICE_169( .D1(n833), .C1(n832), .B1(n834), .C0(n833), .B0(n832), 
    .A0(n834), .F0(select7seg_c_0), .F1(select7seg_c_1));
  SLICE_171 SLICE_171( .D1(\tick_cntr[1] ), .A1(\tick_cntr[3] ), 
    .D0(\tick_cntr[0] ), .C0(\tick_cntr[2] ), .A0(\tick_cntr[1] ), .F0(n2045), 
    .F1(n2447));
  SLICE_176 SLICE_176( .A1(pb0_c), .D0(sdcf77_c), .C0(start_frame_N_256), 
    .B0(pb0_c), .F0(n933), .F1(pb0_N_249));
  SLICE_177 SLICE_177( .F0(VCC_net));
  SLICE_179 SLICE_179( .B0(\cnt1500[6] ), .A0(\cnt1500[10] ), .F0(n9_adj_15));
  SLICE_184 SLICE_184( .D1(n833), .C1(n832), .B1(\memreg[29] ), 
    .A1(\memreg[21] ), .C0(n832), .A0(n833), .F0(select7seg_c_2), .F1(n1030));
  syncdcf77 syncdcf77( .PADDI(dcf77_c), .CE(pinms_c), .INCLK(clk_c), 
    .DI0(sdcf77_c));
  dcf77 dcf77_I( .PADDI(dcf77_c), .dcf77(dcf77));
  pb0 pb0_I( .PADDI(pb0_c), .pb0(pb0));
  clk clk_I( .PADDI(clk_c), .clk(clk));
  ledday_0_ \ledday[0]_I ( .PADDO(ledday_c_0), .ledday0(ledday[0]));
  ledday_1_ \ledday[1]_I ( .PADDO(ledday_c_1), .ledday1(ledday[1]));
  ledday_2_ \ledday[2]_I ( .PADDO(ledday_c_2), .ledday2(ledday[2]));
  ledday_3_ \ledday[3]_I ( .PADDO(ledday_c_3), .ledday3(ledday[3]));
  ledday_4_ \ledday[4]_I ( .PADDO(ledday_c_4), .ledday4(ledday[4]));
  ledday_5_ \ledday[5]_I ( .PADDO(ledday_c_5), .ledday5(ledday[5]));
  ledday_6_ \ledday[6]_I ( .PADDO(ledday_c_6), .ledday6(ledday[6]));
  select7seg_0_ \select7seg[0]_I ( .PADDO(select7seg_c_0), 
    .select7seg0(select7seg[0]));
  select7seg_1_ \select7seg[1]_I ( .PADDO(select7seg_c_1), 
    .select7seg1(select7seg[1]));
  select7seg_2_ \select7seg[2]_I ( .PADDO(select7seg_c_2), 
    .select7seg2(select7seg[2]));
  select7seg_3_ \select7seg[3]_I ( .PADDO(select7seg_c_3), 
    .select7seg3(select7seg[3]));
  segment_0_ \segment[0]_I ( .PADDO(segment_c_0), .segment0(segment[0]));
  segment_1_ \segment[1]_I ( .PADDO(segment_c_1), .segment1(segment[1]));
  segment_2_ \segment[2]_I ( .PADDO(segment_c_2), .segment2(segment[2]));
  segment_3_ \segment[3]_I ( .PADDO(segment_c_3), .segment3(segment[3]));
  segment_4_ \segment[4]_I ( .PADDO(segment_c_4), .segment4(segment[4]));
  segment_5_ \segment[5]_I ( .PADDO(segment_c_5), .segment5(segment[5]));
  segment_6_ \segment[6]_I ( .PADDO(segment_c_6), .segment6(segment[6]));
  sframe sframe_I( .PADDO(sframe_c), .sframe(sframe));
  sdcf77 sdcf77_I( .PADDO(sdcf77_c), .sdcf77(sdcf77));
  pinms pinms_I( .PADDO(pinms_c), .pinms(pinms));
endmodule

module SLICE_0 ( input D1, D0, C0, CIN0, CIN1, output F0, COUT0 );
  wire   GNDI;

  fa2 usecond_cntr_206_add_4_11( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module fa2 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI0, CI1, output S0, S1, 
    CO0, CO1 );

  FA2 inst1( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .CI0(CI0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI1(CI1), .CO0(CO0), .CO1(CO1), .S0(S0), .S1(S1));
  defparam inst1.INIT0 = "0xc33c";
  defparam inst1.INIT1 = "0xc33c";
endmodule

module gnd ( output PWR0 );

  VLO INST1( .Z(PWR0));
endmodule

module SLICE_1 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 usecond_cntr_206_add_4_9( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 usecond_cntr_206_add_4_7( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_3 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 usecond_cntr_206_add_4_5( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_4 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 usecond_cntr_206_add_4_3( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_5 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 cnt1500_208_add_4_3( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_6 ( input D1, C1, B1, CIN1, output F1, COUT1, COUT0 );
  wire   GNDI, VCCI;

  fa2 usecond_cntr_206_add_4_1( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module vcc ( output PWR1 );

  VHI INST1( .Z(PWR1));
endmodule

module SLICE_7 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, F1, COUT0 );
  wire   GNDI;

  fa2 cnt200_207_add_4_9( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_8 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 cnt200_207_add_4_7( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_9 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 cnt200_207_add_4_5( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_10 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, F1, COUT1, 
    COUT0 );
  wire   GNDI;

  fa2 cnt1500_208_add_4_13( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_11 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, F1, COUT1, 
    COUT0 );
  wire   GNDI;

  fa2 cnt1500_208_add_4_7( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_12 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, F1, COUT1, 
    COUT0 );
  wire   GNDI;

  fa2 cnt200_207_add_4_3( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_13 ( input D1, C1, B1, CIN1, output F1, COUT1, COUT0 );
  wire   GNDI, VCCI;

  fa2 cnt200_207_add_4_1( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_14 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, F1, COUT1, 
    COUT0 );
  wire   GNDI;

  fa2 cnt1500_208_add_4_11( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_15 ( input D1, D0, C0, CIN0, CIN1, output F0, COUT0 );
  wire   GNDI;

  fa2 cnt1500_208_add_4_21( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(), 
    .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_16 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, F1, COUT1, 
    COUT0 );
  wire   GNDI;

  fa2 cnt1500_208_add_4_19( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_17 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, F1, COUT1, 
    COUT0 );
  wire   GNDI;

  fa2 cnt1500_208_add_4_17( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_18 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, F1, COUT1, 
    COUT0 );
  wire   GNDI;

  fa2 cnt1500_208_add_4_15( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_19 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, F1, COUT1, 
    COUT0 );
  wire   GNDI;

  fa2 cnt1500_208_add_4_5( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_20 ( input D1, C1, B1, CIN1, output F1, COUT1, COUT0 );
  wire   GNDI, VCCI;

  fa2 cnt1500_208_add_4_1( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_21 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, F1, COUT1, 
    COUT0 );
  wire   GNDI;

  fa2 cnt1500_208_add_4_9( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_22 ( input DI0, D0, C0, B0, A0, LSR, CLK, output Q0, F0 );
  wire   VCCI, CLK_NOTIN, DI0_dly, CLK_dly, LSR_dly;

  lut4 i261_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 databit_c( .D0(DI0_dly), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), 
    .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut4 ( input A, B, C, D, output Z );

  LUT4 #("0xEEEC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module ffsre2 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "RESET";
  defparam INST01.SRMODE = "ASYNC";
endmodule

module inverter ( input I, output Z );

  INV INST1( .A(I), .Z(Z));
endmodule

module SLICE_23 ( input DI1, DI0, B1, B0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40001 SLICE_23_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40002 SLICE_23_K0( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre20003 memreg__0__i2( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre20003 memreg__0__i1( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40001 ( input A, B, C, D, output Z );

  LUT4 #("0xCCCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40002 ( input A, B, C, D, output Z );

  LUT4 #("0xCCCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module ffsre20003 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "RESET";
  defparam INST01.SRMODE = "CE_OVER_LSR";
endmodule

module SLICE_24 ( input DI0, B0, LSR, CLK, output Q0, F0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40002 SLICE_24_K0( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20004 selector_FSM_i0( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module ffsre20004 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "SET";
  defparam INST01.SRMODE = "ASYNC";
endmodule

module SLICE_26 ( input DI1, DI0, D1, A0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40005 SLICE_26_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 SLICE_26_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre20003 dow_i0_i0( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  ffsre20003 dow_i0_i1( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40005 ( input A, B, C, D, output Z );

  LUT4 #("0xFF00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40006 ( input A, B, C, D, output Z );

  LUT4 #("0xAAAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_27 ( input DI1, DI0, D1, C0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40005 SLICE_27_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 SLICE_27_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 shiftreg__21_i2( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 shiftreg__21_i1( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40007 ( input A, B, C, D, output Z );

  LUT4 #("0xF0F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_28 ( input DI1, DI0, B1, A0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40001 SLICE_28_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 SLICE_28_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre20003 memreg__0__i4( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre20003 memreg__0__i3( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_30 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40008 i776_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40009 i1618_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 tick_cntr_205__i4( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 tick_cntr_max_c( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40008 ( input A, B, C, D, output Z );

  LUT4 #("0x1320") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40009 ( input A, B, C, D, output Z );

  LUT4 #("0x0004") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_31 ( input DI1, DI0, C1, A1, D0, C0, B0, A0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40010 i739_2_lut( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40011 i1615_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 usecond_cntr_206__i8( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 usecond_cntr_max_c( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40010 ( input A, B, C, D, output Z );

  LUT4 #("0x5050") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40011 ( input A, B, C, D, output Z );

  LUT4 #("0x0100") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_32 ( input DI1, DI0, D1, B1, A1, B0, A0, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40012 i779_3_lut( .A(A1), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40013 i1612_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 tick_cntr_205__i1( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 tick_cntr_205__i0( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40012 ( input A, B, C, D, output Z );

  LUT4 #("0x0066") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40013 ( input A, B, C, D, output Z );

  LUT4 #("0x1111") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_33 ( input DI1, DI0, A1, C0, A0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40014 SLICE_33_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40015 i712_2_lut_2_lut( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 selector_FSM_i3( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 cnt1500_208__i1( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40014 ( input A, B, C, D, output Z );

  LUT4 #("0xAAAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40015 ( input A, B, C, D, output Z );

  LUT4 #("0x0A0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_34 ( input DI1, DI0, D1, B1, C0, A0, LSR, CLK, output Q0, Q1, F0, 
    F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40016 i775_2_lut_2_lut( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40017 i719_2_lut( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 cnt1500_208__i2( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 cnt200_207__i1( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40016 ( input A, B, C, D, output Z );

  LUT4 #("0x3300") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40017 ( input A, B, C, D, output Z );

  LUT4 #("0xA0A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_36 ( input DI1, DI0, C1, B1, C0, B0, CE, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40018 i748_2_lut( .A(GNDI), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40019 i723_2_lut( .A(GNDI), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 usecond_cntr_206__i1( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 usecond_cntr_206__i0( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40018 ( input A, B, C, D, output Z );

  LUT4 #("0x0C0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40019 ( input A, B, C, D, output Z );

  LUT4 #("0x3030") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_37 ( input DI0, D0, A0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40020 i738_2_lut( .A(A0), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 usecond_cntr_206__i9( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40020 ( input A, B, C, D, output Z );

  LUT4 #("0x5500") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_39 ( input DI1, DI0, D1, B1, D0, A0, CE, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40016 i741_2_lut( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40020 i740_2_lut( .A(A0), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 usecond_cntr_206__i6( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 usecond_cntr_206__i7( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_41 ( input DI1, DI0, C1, B1, C0, B0, CE, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40018 i743_2_lut( .A(GNDI), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40019 i742_2_lut( .A(GNDI), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 usecond_cntr_206__i4( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 usecond_cntr_206__i5( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_43 ( input DI1, DI0, D1, C1, B0, A0, CE, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40021 i745_2_lut( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40022 i744_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 usecond_cntr_206__i2( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 usecond_cntr_206__i3( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40021 ( input A, B, C, D, output Z );

  LUT4 #("0x0F00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40022 ( input A, B, C, D, output Z );

  LUT4 #("0x2222") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_46 ( input DI1, DI0, D1, A1, C0, A0, LSR, CLK, output Q0, Q1, F0, 
    F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40023 i750_2_lut( .A(A1), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40017 i749_2_lut( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 cnt200_207__i8( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 cnt200_207__i9( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40023 ( input A, B, C, D, output Z );

  LUT4 #("0xAA00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_48 ( input DI1, DI0, D1, B1, C0, A0, LSR, CLK, output Q0, Q1, F0, 
    F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40024 i752_2_lut( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40017 i751_2_lut( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 cnt200_207__i6( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 cnt200_207__i7( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40024 ( input A, B, C, D, output Z );

  LUT4 #("0xCC00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_50 ( input DI1, DI0, D1, A1, C0, A0, LSR, CLK, output Q0, Q1, F0, 
    F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40023 i754_2_lut( .A(A1), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40017 i753_2_lut( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 cnt200_207__i4( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 cnt200_207__i5( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_52 ( input DI1, DI0, D1, C1, C0, A0, LSR, CLK, output Q0, Q1, F0, 
    F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40025 i756_2_lut( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40017 i755_2_lut( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 cnt200_207__i2( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 cnt200_207__i3( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40025 ( input A, B, C, D, output Z );

  LUT4 #("0xF000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_54 ( input DI1, DI0, D1, C1, D0, B0, LSR, CLK, output Q0, Q1, F0, 
    F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40021 i758_2_lut_2_lut( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40026 i757_2_lut_2_lut( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 cnt1500_208__i19( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 cnt1500_208__i20( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40026 ( input A, B, C, D, output Z );

  LUT4 #("0x00CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_56 ( input DI1, DI0, B1, A1, D0, B0, LSR, CLK, output Q0, Q1, F0, 
    F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40027 i760_2_lut_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40028 i759_2_lut_2_lut( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 cnt1500_208__i17( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 cnt1500_208__i18( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40027 ( input A, B, C, D, output Z );

  LUT4 #("0x4444") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40028 ( input A, B, C, D, output Z );

  LUT4 #("0x3300") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_58 ( input DI1, DI0, C1, A1, B0, A0, LSR, CLK, output Q0, Q1, F0, 
    F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40029 i762_2_lut_2_lut( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40022 i761_2_lut_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 cnt1500_208__i15( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 cnt1500_208__i16( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40029 ( input A, B, C, D, output Z );

  LUT4 #("0x0A0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_60 ( input DI1, DI0, D1, B1, C0, A0, LSR, CLK, output Q0, Q1, F0, 
    F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40016 i764_2_lut_2_lut( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40015 i763_2_lut_2_lut( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 cnt1500_208__i13( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 cnt1500_208__i14( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_62 ( input DI1, DI0, B1, A1, D0, A0, LSR, CLK, output Q0, Q1, F0, 
    F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40030 i766_2_lut_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40020 i765_2_lut_2_lut( .A(A0), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 cnt1500_208__i11( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 cnt1500_208__i12( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40030 ( input A, B, C, D, output Z );

  LUT4 #("0x2222") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_64 ( input DI1, DI0, C1, B1, D0, C0, LSR, CLK, output Q0, Q1, F0, 
    F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40031 i768_2_lut_2_lut( .A(GNDI), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40032 i767_2_lut_2_lut( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre2 cnt1500_208__i9( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 cnt1500_208__i10( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40031 ( input A, B, C, D, output Z );

  LUT4 #("0x3030") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40032 ( input A, B, C, D, output Z );

  LUT4 #("0x0F00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_66 ( input DI1, DI0, D1, B1, D0, A0, LSR, CLK, output Q0, Q1, F0, 
    F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40016 i770_2_lut_2_lut( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40020 i769_2_lut_2_lut( .A(A0), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 cnt1500_208__i7( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 cnt1500_208__i8( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_68 ( input DI1, DI0, D1, B1, D0, A0, LSR, CLK, output Q0, Q1, F0, 
    F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40033 i772_2_lut_2_lut( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40020 i771_2_lut_2_lut( .A(A0), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 cnt1500_208__i5( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 cnt1500_208__i6( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40033 ( input A, B, C, D, output Z );

  LUT4 #("0x00CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_70 ( input DI1, DI0, D1, B1, B0, A0, LSR, CLK, output Q0, Q1, F0, 
    F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40033 i774_2_lut_2_lut( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40034 i773_2_lut_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 cnt1500_208__i3( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 cnt1500_208__i4( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40034 ( input A, B, C, D, output Z );

  LUT4 #("0x4444") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_74 ( input DI1, DI0, D1, C1, B1, A1, D0, B0, A0, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40035 i778_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40036 i777_3_lut( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 tick_cntr_205__i2( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 tick_cntr_205__i3( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40035 ( input A, B, C, D, output Z );

  LUT4 #("0x1540") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40036 ( input A, B, C, D, output Z );

  LUT4 #("0x1144") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_77 ( input DI0, C0, LSR, CLK, output Q0, F0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40007 SLICE_77_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 shiftreg__21_i37( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_78 ( input DI1, DI0, A1, D0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40014 SLICE_78_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40037 SLICE_78_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 shiftreg__21_i35( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 shiftreg__21_i36( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40037 ( input A, B, C, D, output Z );

  LUT4 #("0xFF00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_80 ( input DI1, DI0, A1, C0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40014 SLICE_80_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 SLICE_80_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 shiftreg__21_i33( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 shiftreg__21_i34( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_82 ( input DI1, DI0, C1, C0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40038 SLICE_82_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 SLICE_82_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 shiftreg__21_i31( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 shiftreg__21_i32( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40038 ( input A, B, C, D, output Z );

  LUT4 #("0xF0F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_84 ( input DI1, DI0, A1, A0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40014 SLICE_84_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 SLICE_84_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 shiftreg__21_i29( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 shiftreg__21_i30( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_86 ( input DI1, DI0, A1, A0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40014 SLICE_86_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 SLICE_86_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 shiftreg__21_i27( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 shiftreg__21_i28( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_88 ( input DI1, DI0, A1, C0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40014 SLICE_88_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 SLICE_88_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 shiftreg__21_i25( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 shiftreg__21_i26( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_90 ( input DI1, DI0, C1, C0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40038 SLICE_90_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 SLICE_90_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 shiftreg__21_i23( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 shiftreg__21_i24( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_92 ( input DI1, DI0, A1, C0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40014 SLICE_92_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 SLICE_92_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 shiftreg__21_i21( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 shiftreg__21_i22( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_94 ( input DI1, DI0, A1, A0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40014 SLICE_94_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 SLICE_94_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 shiftreg__21_i19( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 shiftreg__21_i20( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_96 ( input DI1, DI0, A1, C0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40014 SLICE_96_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 SLICE_96_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 shiftreg__21_i17( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 shiftreg__21_i18( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_98 ( input DI1, DI0, A1, C0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40014 SLICE_98_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 SLICE_98_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 shiftreg__21_i15( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 shiftreg__21_i16( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_100 ( input DI1, DI0, A1, D0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40014 SLICE_100_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40037 SLICE_100_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 shiftreg__21_i13( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 shiftreg__21_i14( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_102 ( input DI1, DI0, C1, A0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40038 SLICE_102_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 SLICE_102_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 shiftreg__21_i11( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 shiftreg__21_i12( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_104 ( input DI1, DI0, A1, A0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40014 SLICE_104_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 SLICE_104_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 shiftreg__21_i9( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 shiftreg__21_i10( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_106 ( input DI1, DI0, C1, C0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40038 SLICE_106_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 SLICE_106_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 shiftreg__21_i7( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 shiftreg__21_i8( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_108 ( input DI1, DI0, A1, A0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40014 SLICE_108_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 SLICE_108_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 shiftreg__21_i5( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 shiftreg__21_i6( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_110 ( input DI1, DI0, C1, A0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40038 SLICE_110_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 SLICE_110_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 shiftreg__21_i3( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 shiftreg__21_i4( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_115 ( input DI1, DI0, A1, C0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40014 SLICE_115_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 SLICE_115_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 selector_FSM_i1( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 selector_FSM_i2( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_117 ( input DI0, C0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40007 SLICE_117_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20003 memreg__0__i13( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_118 ( input DI1, DI0, D1, A0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40005 SLICE_118_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 SLICE_118_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre20003 memreg__0__i11( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre20003 memreg__0__i12( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_120 ( input DI1, DI0, D1, A0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40005 SLICE_120_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 SLICE_120_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre20003 memreg__0__i9( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre20003 memreg__0__i10( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_122 ( input DI1, DI0, C1, A0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40038 SLICE_122_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 SLICE_122_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre20003 memreg__0__i7( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre20003 memreg__0__i8( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_124 ( input DI1, DI0, D1, A0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40005 SLICE_124_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 SLICE_124_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre20003 memreg__0__i5( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre20003 memreg__0__i6( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_127 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40039 i1553_2_lut( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 i1543_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40039 ( input A, B, C, D, output Z );

  LUT4 #("0x00F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40040 ( input A, B, C, D, output Z );

  LUT4 #("0x4464") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_128 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, LSR, CLK, 
    output Q1, F0, F1 );
  wire   VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40041 i439_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40042 i45_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 start_frame( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40041 ( input A, B, C, D, output Z );

  LUT4 #("0xEF40") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40042 ( input A, B, C, D, output Z );

  LUT4 #("0x5C0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_129 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40043 mux_190_i1_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40044 i104_2_lut( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40043 ( input A, B, C, D, output Z );

  LUT4 #("0xD1DD") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40044 ( input A, B, C, D, output Z );

  LUT4 #("0xFFF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_130 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40045 mux_159_i1_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40046 mux_191_i1_3_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40045 ( input A, B, C, D, output Z );

  LUT4 #("0xACA0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40046 ( input A, B, C, D, output Z );

  LUT4 #("0xF870") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_131 ( input C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40047 i1_2_lut( .A(GNDI), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40048 i813_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40047 ( input A, B, C, D, output Z );

  LUT4 #("0xFCFC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40048 ( input A, B, C, D, output Z );

  LUT4 #("0xFFA8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_132 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40049 start_frame_I_174_3_lut( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40050 i1_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40049 ( input A, B, C, D, output Z );

  LUT4 #("0x5550") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40050 ( input A, B, C, D, output Z );

  LUT4 #("0xFEF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_133 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40051 i293_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40052 i1_4_lut_adj_1( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40051 ( input A, B, C, D, output Z );

  LUT4 #("0x0CB7") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40052 ( input A, B, C, D, output Z );

  LUT4 #("0x2031") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_134 ( input D1, C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40053 i37_3_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40054 i38_3_lut( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40053 ( input A, B, C, D, output Z );

  LUT4 #("0xF0E2") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40054 ( input A, B, C, D, output Z );

  LUT4 #("0xFC0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_135 ( input A1, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40055 i256_1_lut( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40056 i185_2_lut( .A(GNDI), .B(B0), .C(C0), .D(GNDI), .Z(F0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40055 ( input A, B, C, D, output Z );

  LUT4 #("0x5555") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40056 ( input A, B, C, D, output Z );

  LUT4 #("0xC0C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_136 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40057 i35_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40058 i1559_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40057 ( input A, B, C, D, output Z );

  LUT4 #("0x30B8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40058 ( input A, B, C, D, output Z );

  LUT4 #("0x1F00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_137 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40059 i1473_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40060 i1471_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40059 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40060 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_140 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40061 i1_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40062 i3_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40061 ( input A, B, C, D, output Z );

  LUT4 #("0x008C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40062 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_141 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40063 i3_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40064 i253_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40063 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40064 ( input A, B, C, D, output Z );

  LUT4 #("0xEAAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_145 ( input D1, C1, B1, A1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40065 i47_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40066 i1455_2_lut( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40065 ( input A, B, C, D, output Z );

  LUT4 #("0x440F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40066 ( input A, B, C, D, output Z );

  LUT4 #("0xFFCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_147 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40067 i4_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40068 i2_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40067 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40068 ( input A, B, C, D, output Z );

  LUT4 #("0x8880") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_149 ( input C0, A0, output F0 );
  wire   GNDI;

  lut40069 i2_2_lut( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40069 ( input A, B, C, D, output Z );

  LUT4 #("0xFAFA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_150 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40070 i7_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40071 i6_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40070 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40071 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_151 ( input D1, C1, B1, A1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40072 i795_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40073 i1_3_lut( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40072 ( input A, B, C, D, output Z );

  LUT4 #("0xFDF3") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40073 ( input A, B, C, D, output Z );

  LUT4 #("0xA0A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_154 ( input D1, C1, B1, A1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40074 i1_4_lut_adj_2( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40075 i1549_2_lut( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40074 ( input A, B, C, D, output Z );

  LUT4 #("0x5410") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40075 ( input A, B, C, D, output Z );

  LUT4 #("0x0A0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_155 ( input D1, C1, B1, A1, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40076 i1_4_lut_adj_3( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40077 i264_2_lut( .A(GNDI), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40076 ( input A, B, C, D, output Z );

  LUT4 #("0xFFA8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40077 ( input A, B, C, D, output Z );

  LUT4 #("0xC0C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_158 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40078 i330_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40079 i1_4_lut_adj_4( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40078 ( input A, B, C, D, output Z );

  LUT4 #("0x51B0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40079 ( input A, B, C, D, output Z );

  LUT4 #("0xF0FE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_159 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40080 i789_3_lut_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40081 i790_3_lut_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40080 ( input A, B, C, D, output Z );

  LUT4 #("0xB333") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40081 ( input A, B, C, D, output Z );

  LUT4 #("0x5D55") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_160 ( input DI1, D1, D0, C0, B0, A0, CE, CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly;

  lut40005 SLICE_160_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40082 i1624_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20003 dow_i0_i2( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40082 ( input A, B, C, D, output Z );

  LUT4 #("0x02FF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_162 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40083 i680_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40084 i793_3_lut_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40083 ( input A, B, C, D, output Z );

  LUT4 #("0x04FF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40084 ( input A, B, C, D, output Z );

  LUT4 #("0x2F0F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_164 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40085 i791_3_lut_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40086 i794_3_lut_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40085 ( input A, B, C, D, output Z );

  LUT4 #("0x3B33") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40086 ( input A, B, C, D, output Z );

  LUT4 #("0x0F4F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_165 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40087 i309_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40088 i294_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40087 ( input A, B, C, D, output Z );

  LUT4 #("0x5F54") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40088 ( input A, B, C, D, output Z );

  LUT4 #("0x307B") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_168 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40089 i310_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40090 i1621_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40089 ( input A, B, C, D, output Z );

  LUT4 #("0x419D") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40090 ( input A, B, C, D, output Z );

  LUT4 #("0x001B") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_169 ( input D1, C1, B1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40091 i783_2_lut_3_lut( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40092 i688_2_lut_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40091 ( input A, B, C, D, output Z );

  LUT4 #("0xFFF3") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40092 ( input A, B, C, D, output Z );

  LUT4 #("0xFEFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_171 ( input D1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40093 i1463_2_lut( .A(A1), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40094 i1171_2_lut_3_lut( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40093 ( input A, B, C, D, output Z );

  LUT4 #("0xAA00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40094 ( input A, B, C, D, output Z );

  LUT4 #("0xA000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_176 ( input A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40055 pb0_I_0_1_lut( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40095 i2_3_lut_3_lut( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40095 ( input A, B, C, D, output Z );

  LUT4 #("0x00C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_177 ( output F0 );
  wire   GNDI;

  lut40096 i2( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module lut40096 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_179 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40097 i3_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40097 ( input A, B, C, D, output Z );

  LUT4 #("0xEEEE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_184 ( input D1, C1, B1, A1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40098 mux_185_i1_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40099 i395_2_lut( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40098 ( input A, B, C, D, output Z );

  LUT4 #("0xCCCA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40099 ( input A, B, C, D, output Z );

  LUT4 #("0xF5F5") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module syncdcf77 ( input PADDI, CE, INCLK, output DI0 );
  wire   GNDI, PADDI_dly, INCLK_dly, CE_dly;

  IOL_B_B syncdcf77( .PADDI(PADDI_dly), .DO1(GNDI), .DO0(GNDI), .CE(CE_dly), 
    .IOLTO(GNDI), .HOLD(GNDI), .INCLK(INCLK_dly), .OUTCLK(GNDI), .PADDO(), 
    .PADDT(), .DI1(), .DI0(DI0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (INCLK => DI0) = (0:0:0,0:0:0);
    $setuphold (posedge INCLK, PADDI, 0:0:0, 0:0:0,,,, INCLK_dly, PADDI_dly);
    $setuphold (posedge INCLK, CE, 0:0:0, 0:0:0,,,, INCLK_dly, CE_dly);
  endspecify

endmodule

module IOL_B_B ( input PADDI, DO1, DO0, CE, IOLTO, HOLD, INCLK, OUTCLK, 
    output PADDO, PADDT, DI1, DI0 );

  IOL_B INST10( .PADDI(PADDI), .DO1(DO1), .DO0(DO0), .CE(CE), .IOLTO(IOLTO), 
    .HOLD(HOLD), .INCLK(INCLK), .OUTCLK(OUTCLK), .PADDO(PADDO), .PADDT(PADDT), 
    .DI1(DI1), .DI0(DI0));
  defparam INST10.LATCHIN = "NONE_REG";
  defparam INST10.DDROUT = "NO";
endmodule

module dcf77 ( output PADDI, input dcf77 );
  wire   GNDI;

  BB_B_B \dcf77_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(dcf77));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (dcf77 => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module BB_B_B ( input T_N, I, output O, inout B );

  BB_B INST10( .T_N(T_N), .I(I), .O(O), .B(B));
endmodule

module pb0 ( output PADDI, input pb0 );
  wire   GNDI;

  BB_B_B \pb0_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(pb0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (pb0 => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module clk ( output PADDI, input clk );
  wire   GNDI;

  BB_B_B \clk_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(clk));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (clk => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module ledday_0_ ( input PADDO, output ledday0 );
  wire   VCCI;

  BB_B_B \ledday_pad[0].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(ledday0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => ledday0) = (0:0:0,0:0:0);
  endspecify

endmodule

module ledday_1_ ( input PADDO, output ledday1 );
  wire   VCCI;

  BB_B_B \ledday_pad[1].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(ledday1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => ledday1) = (0:0:0,0:0:0);
  endspecify

endmodule

module ledday_2_ ( input PADDO, output ledday2 );
  wire   VCCI;

  BB_B_B \ledday_pad[2].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(ledday2));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => ledday2) = (0:0:0,0:0:0);
  endspecify

endmodule

module ledday_3_ ( input PADDO, output ledday3 );
  wire   VCCI;

  BB_B_B \ledday_pad[3].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(ledday3));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => ledday3) = (0:0:0,0:0:0);
  endspecify

endmodule

module ledday_4_ ( input PADDO, output ledday4 );
  wire   VCCI;

  BB_B_B \ledday_pad[4].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(ledday4));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => ledday4) = (0:0:0,0:0:0);
  endspecify

endmodule

module ledday_5_ ( input PADDO, output ledday5 );
  wire   VCCI;

  BB_B_B \ledday_pad[5].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(ledday5));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => ledday5) = (0:0:0,0:0:0);
  endspecify

endmodule

module ledday_6_ ( input PADDO, output ledday6 );
  wire   VCCI;

  BB_B_B \ledday_pad[6].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(ledday6));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => ledday6) = (0:0:0,0:0:0);
  endspecify

endmodule

module select7seg_0_ ( input PADDO, output select7seg0 );
  wire   VCCI;

  BB_B_B \select7seg_pad[0].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(select7seg0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => select7seg0) = (0:0:0,0:0:0);
  endspecify

endmodule

module select7seg_1_ ( input PADDO, output select7seg1 );
  wire   VCCI;

  BB_B_B \select7seg_pad[1].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(select7seg1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => select7seg1) = (0:0:0,0:0:0);
  endspecify

endmodule

module select7seg_2_ ( input PADDO, output select7seg2 );
  wire   VCCI;

  BB_B_B \select7seg_pad[2].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(select7seg2));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => select7seg2) = (0:0:0,0:0:0);
  endspecify

endmodule

module select7seg_3_ ( input PADDO, output select7seg3 );
  wire   VCCI;

  BB_B_B \select7seg_pad[3].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(select7seg3));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => select7seg3) = (0:0:0,0:0:0);
  endspecify

endmodule

module segment_0_ ( input PADDO, output segment0 );
  wire   VCCI;

  BB_B_B \segment_pad[0].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(segment0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => segment0) = (0:0:0,0:0:0);
  endspecify

endmodule

module segment_1_ ( input PADDO, output segment1 );
  wire   VCCI;

  BB_B_B \segment_pad[1].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(segment1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => segment1) = (0:0:0,0:0:0);
  endspecify

endmodule

module segment_2_ ( input PADDO, output segment2 );
  wire   VCCI;

  BB_B_B \segment_pad[2].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(segment2));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => segment2) = (0:0:0,0:0:0);
  endspecify

endmodule

module segment_3_ ( input PADDO, output segment3 );
  wire   VCCI;

  BB_B_B \segment_pad[3].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(segment3));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => segment3) = (0:0:0,0:0:0);
  endspecify

endmodule

module segment_4_ ( input PADDO, output segment4 );
  wire   VCCI;

  BB_B_B \segment_pad[4].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(segment4));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => segment4) = (0:0:0,0:0:0);
  endspecify

endmodule

module segment_5_ ( input PADDO, output segment5 );
  wire   VCCI;

  BB_B_B \segment_pad[5].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(segment5));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => segment5) = (0:0:0,0:0:0);
  endspecify

endmodule

module segment_6_ ( input PADDO, output segment6 );
  wire   VCCI;

  BB_B_B \segment_pad[6].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(segment6));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => segment6) = (0:0:0,0:0:0);
  endspecify

endmodule

module sframe ( input PADDO, output sframe );
  wire   VCCI;

  BB_B_B \sframe_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(sframe));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => sframe) = (0:0:0,0:0:0);
  endspecify

endmodule

module sdcf77 ( input PADDO, output sdcf77 );
  wire   VCCI;

  BB_B_B \sdcf77_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(sdcf77));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => sdcf77) = (0:0:0,0:0:0);
  endspecify

endmodule

module pinms ( input PADDO, output pinms );
  wire   VCCI;

  BB_B_B \pinms_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(pinms));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => pinms) = (0:0:0,0:0:0);
  endspecify

endmodule
