
// Verilog netlist produced by program backanno, Version Radiant Software (64-bit) 3.2.0.18.0

// backanno -o Ouah_Ouah2_vo.vo -sp High-Performance_1.2V -w -neg -gui Ouah_Ouah2.udb 
// Netlist created on Mon May 29 15:22:35 2023
// Netlist written on Mon May 29 15:22:42 2023
// Design is for device iCE40UP5K
// Design is for package SG48
// Design is for performance grade High-Performance_1.2V

`timescale 1 ns / 1 ps

module ouah ( dcf77, pb0, clk, s8421, select7seg, segment, sdatabit, sframe, 
              sdcf77, pinms );
  input  dcf77, pb0, clk;
  output [3:0] s8421;
  output [3:0] select7seg;
  output [6:0] segment;
  output sdatabit, sframe, sdcf77, pinms;
  wire   n2258, \msecond_cntr[6] , n1442, \msecond_cntr[5] , n50_adj_12, n49_2, 
         n1444, n2297, \usecond_cntr[2] , n1405, \usecond_cntr[1] , n54, n53, 
         n1407, n2243, n11, VCC_net, n60_adj_27, n1416, n2303, 
         \usecond_cntr[6] , n1409, \usecond_cntr[5] , n50, n49_adj_25, n1411, 
         n46_adj_20, n47_adj_19, n2273, \cnt200[4] , n1430, \cnt200[3] , 
         cnt200_8__N_39, pinms_c, n1432, n2255, \msecond_cntr[4] , n1440, 
         \msecond_cntr[3] , n52_adj_10, n51_adj_11, n2306, \usecond_cntr[8] , 
         \usecond_cntr[7] , n48, n47, n1413, n48_adj_18, n49_adj_17, n2270, 
         \cnt200[2] , n1428, \cnt200[1] , n50_adj_16, n2246, n9, n2294, 
         \cnt1500[10] , n1424, \cnt1500[9] , n51_adj_29, n50_adj_31, n2291, 
         \cnt1500[8] , n1422, \cnt1500[7] , n53_adj_34, n52_adj_35, n2252, 
         \msecond_cntr[2] , n1438, \msecond_cntr[1] , n54_adj_8, n53_adj_9, 
         n2249, \msecond_cntr[0] , n55_adj_7, n2264, n1446, \msecond_cntr[9] , 
         n46_adj_15, n2288, \cnt1500[6] , n1420, \cnt1500[5] , n55_adj_32, 
         n54_adj_33, n2285, \cnt1500[4] , n1418, \cnt1500[3] , n57_2, n56, 
         n2282, \cnt1500[2] , n10, n59_adj_28, n58_adj_30, n2300, 
         \usecond_cntr[4] , \usecond_cntr[3] , n52, n51, n42, n43, n2279, 
         \cnt200[8] , n1434, \cnt200[7] , n44, n45_2, n2276, \cnt200[6] , 
         \cnt200[5] , n2261, \msecond_cntr[8] , \msecond_cntr[7] , n48_adj_13, 
         n47_adj_14, n2309, n46, n2240, \usecond_cntr[0] , n55, 
         \VCC_net\000.BUF1 , n4, pb0_N_231, sframe_c, n33, tick_cntr_max_N_230, 
         \tick_cntr[4] , n1387, tick_cntr_max, \tick_cntr[3] , n1740, 
         \tick_cntr[0] , \tick_cntr[2] , clk_c, \n789.sig_040.FeedThruLUT , 
         \n786.sig_000.FeedThruLUT , n789, n786, n788, msecond_cntr_max_N_235, 
         n6, msecond_cntr_9__N_155, msecond_cntr_max, n59, 
         usecond_cntr_max_N_233, usecond_cntr_max, n1758, 
         \shiftreg[23].sig_037.FeedThruLUT , 
         \shiftreg[22].sig_001.FeedThruLUT , \shiftreg[23] , \shiftreg[22] , 
         sdcf77_c, \shiftreg[21] , n66, n67, n72, n73, n36, n1520, 
         \tick_cntr[1] , n66_adj_38, n67_adj_39, n59_adj_5, n58_adj_6, 
         n61_adj_3, n60_adj_4, n63, n62_2, n65_adj_37, n64_adj_36, n35, n34, 
         n63_adj_26, n65_adj_22, n64_adj_21, n67_adj_24, n66_adj_23, n69, n68, 
         n71, n70, n61, n60, n63_adj_1, n62_adj_2, n65, n64, 
         \shiftreg[58].sig_002.FeedThruLUT , \sdatabit_c$n0 , \shiftreg[58] , 
         n1844, pb0_c, sdatabit_c, \shiftreg[57] , 
         \shiftreg[56].sig_004.FeedThruLUT , 
         \shiftreg[57].sig_003.FeedThruLUT , \shiftreg[56] , \shiftreg[55] , 
         \shiftreg[54].sig_006.FeedThruLUT , 
         \shiftreg[55].sig_005.FeedThruLUT , \shiftreg[54] , \shiftreg[53] , 
         \shiftreg[52].sig_008.FeedThruLUT , 
         \shiftreg[53].sig_007.FeedThruLUT , \shiftreg[52] , \shiftreg[51] , 
         \shiftreg[50].sig_010.FeedThruLUT , 
         \shiftreg[51].sig_009.FeedThruLUT , \shiftreg[50] , \shiftreg[49] , 
         \shiftreg[48].sig_012.FeedThruLUT , 
         \shiftreg[49].sig_011.FeedThruLUT , \shiftreg[48] , \shiftreg[47] , 
         \shiftreg[46].sig_014.FeedThruLUT , 
         \shiftreg[47].sig_013.FeedThruLUT , \shiftreg[46] , \shiftreg[45] , 
         \shiftreg[44].sig_016.FeedThruLUT , 
         \shiftreg[45].sig_015.FeedThruLUT , \shiftreg[44] , \shiftreg[43] , 
         \shiftreg[42].sig_018.FeedThruLUT , 
         \shiftreg[43].sig_017.FeedThruLUT , \shiftreg[42] , \shiftreg[41] , 
         \shiftreg[40].sig_020.FeedThruLUT , 
         \shiftreg[41].sig_019.FeedThruLUT , \shiftreg[40] , \shiftreg[39] , 
         \shiftreg[38].sig_022.FeedThruLUT , 
         \shiftreg[39].sig_021.FeedThruLUT , \shiftreg[38] , \shiftreg[37] , 
         \shiftreg[36].sig_024.FeedThruLUT , 
         \shiftreg[37].sig_023.FeedThruLUT , \shiftreg[36] , \shiftreg[35] , 
         \shiftreg[34].sig_026.FeedThruLUT , 
         \shiftreg[35].sig_025.FeedThruLUT , \shiftreg[34] , \shiftreg[33] , 
         \shiftreg[32].sig_028.FeedThruLUT , 
         \shiftreg[33].sig_027.FeedThruLUT , \shiftreg[32] , \shiftreg[31] , 
         \shiftreg[30].sig_030.FeedThruLUT , 
         \shiftreg[31].sig_029.FeedThruLUT , \shiftreg[30] , \shiftreg[29] , 
         \shiftreg[28].sig_032.FeedThruLUT , 
         \shiftreg[29].sig_031.FeedThruLUT , \shiftreg[28] , \shiftreg[27] , 
         \shiftreg[26].sig_034.FeedThruLUT , 
         \shiftreg[27].sig_033.FeedThruLUT , \shiftreg[26] , \shiftreg[25] , 
         \shiftreg[24].sig_036.FeedThruLUT , 
         \shiftreg[25].sig_035.FeedThruLUT , \shiftreg[24] , 
         \n788.sig_039.FeedThruLUT , \n787.sig_038.FeedThruLUT , n787, 
         \shiftreg[35].sig_041.FeedThruLUT , pinms_c_enable_4, \memreg[35] , 
         \shiftreg[33].sig_043.FeedThruLUT , 
         \shiftreg[34].sig_042.FeedThruLUT , \memreg[34] , \memreg[33] , 
         \shiftreg[31].sig_045.FeedThruLUT , 
         \shiftreg[32].sig_044.FeedThruLUT , \memreg[32] , \memreg[31] , 
         \shiftreg[28].sig_047.FeedThruLUT , 
         \shiftreg[30].sig_046.FeedThruLUT , \memreg[30] , \memreg[28] , 
         \shiftreg[26].sig_049.FeedThruLUT , 
         \shiftreg[27].sig_048.FeedThruLUT , \memreg[27] , \memreg[26] , 
         \shiftreg[24].sig_051.FeedThruLUT , 
         \shiftreg[25].sig_050.FeedThruLUT , \memreg[25] , \memreg[24] , 
         \shiftreg[22].sig_053.FeedThruLUT , 
         \shiftreg[23].sig_052.FeedThruLUT , \memreg[23] , \memreg[22] , n886, 
         n833, n2049, \bcd[0] , \bcd[1] , \bcd[2] , \bcd[3] , segment_c_5, 
         n2043, segment_c_6, n899, n1750, n1596, n16, n12, n1850, n1847, 
         segment_c_4, segment_c_1, segment_c_3, segment_c_0, segment_c_2, 
         select7seg_c_1, select7seg_c_0, n58, select7seg_c_3, select7seg_c_2, 
         s8421_c_3, dcf77_c, s8421_c_2, s8421_c_1, s8421_c_0;

  SLICE_0 SLICE_0( .D1(n2258), .C1(\msecond_cntr[6] ), .D0(n1442), 
    .C0(\msecond_cntr[5] ), .CIN0(n1442), .CIN1(n2258), .F0(n50_adj_12), 
    .F1(n49_2), .COUT1(n1444), .COUT0(n2258));
  SLICE_1 SLICE_1( .D1(n2297), .C1(\usecond_cntr[2] ), .D0(n1405), 
    .C0(\usecond_cntr[1] ), .CIN0(n1405), .CIN1(n2297), .F0(n54), .F1(n53), 
    .COUT1(n1407), .COUT0(n2297));
  SLICE_2 SLICE_2( .D1(n2243), .C1(n11), .B1(VCC_net), .CIN1(n2243), 
    .F1(n60_adj_27), .COUT1(n1416), .COUT0(n2243));
  SLICE_3 SLICE_3( .D1(n2303), .C1(\usecond_cntr[6] ), .D0(n1409), 
    .C0(\usecond_cntr[5] ), .CIN0(n1409), .CIN1(n2303), .F0(n50), 
    .F1(n49_adj_25), .COUT1(n1411), .COUT0(n2303));
  SLICE_4 SLICE_4( .DI1(n46_adj_20), .DI0(n47_adj_19), .D1(n2273), 
    .C1(\cnt200[4] ), .D0(n1430), .C0(\cnt200[3] ), .LSR(cnt200_8__N_39), 
    .CLK(pinms_c), .CIN0(n1430), .CIN1(n2273), .Q0(\cnt200[3] ), 
    .Q1(\cnt200[4] ), .F0(n47_adj_19), .F1(n46_adj_20), .COUT1(n1432), 
    .COUT0(n2273));
  SLICE_5 SLICE_5( .D1(n2255), .C1(\msecond_cntr[4] ), .D0(n1440), 
    .C0(\msecond_cntr[3] ), .CIN0(n1440), .CIN1(n2255), .F0(n52_adj_10), 
    .F1(n51_adj_11), .COUT1(n1442), .COUT0(n2255));
  SLICE_6 SLICE_6( .D1(n2306), .C1(\usecond_cntr[8] ), .D0(n1411), 
    .C0(\usecond_cntr[7] ), .CIN0(n1411), .CIN1(n2306), .F0(n48), .F1(n47), 
    .COUT1(n1413), .COUT0(n2306));
  SLICE_7 SLICE_7( .DI1(n48_adj_18), .DI0(n49_adj_17), .D1(n2270), 
    .C1(\cnt200[2] ), .D0(n1428), .C0(\cnt200[1] ), .LSR(cnt200_8__N_39), 
    .CLK(pinms_c), .CIN0(n1428), .CIN1(n2270), .Q0(\cnt200[1] ), 
    .Q1(\cnt200[2] ), .F0(n49_adj_17), .F1(n48_adj_18), .COUT1(n1430), 
    .COUT0(n2270));
  SLICE_8 SLICE_8( .DI1(n50_adj_16), .D1(n2246), .C1(n9), .B1(VCC_net), 
    .LSR(cnt200_8__N_39), .CLK(pinms_c), .CIN1(n2246), .Q1(n9), 
    .F1(n50_adj_16), .COUT1(n1428), .COUT0(n2246));
  SLICE_9 SLICE_9( .D1(n2294), .C1(\cnt1500[10] ), .D0(n1424), 
    .C0(\cnt1500[9] ), .CIN0(n1424), .CIN1(n2294), .F0(n51_adj_29), 
    .F1(n50_adj_31), .COUT0(n2294));
  SLICE_10 SLICE_10( .D1(n2291), .C1(\cnt1500[8] ), .D0(n1422), 
    .C0(\cnt1500[7] ), .CIN0(n1422), .CIN1(n2291), .F0(n53_adj_34), 
    .F1(n52_adj_35), .COUT1(n1424), .COUT0(n2291));
  SLICE_11 SLICE_11( .D1(n2252), .C1(\msecond_cntr[2] ), .D0(n1438), 
    .C0(\msecond_cntr[1] ), .CIN0(n1438), .CIN1(n2252), .F0(n54_adj_8), 
    .F1(n53_adj_9), .COUT1(n1440), .COUT0(n2252));
  SLICE_12 SLICE_12( .D1(n2249), .C1(\msecond_cntr[0] ), .B1(VCC_net), 
    .CIN1(n2249), .F1(n55_adj_7), .COUT1(n1438), .COUT0(n2249));
  SLICE_13 SLICE_13( .D1(n2264), .D0(n1446), .C0(\msecond_cntr[9] ), 
    .CIN0(n1446), .CIN1(n2264), .F0(n46_adj_15), .COUT0(n2264));
  SLICE_14 SLICE_14( .D1(n2288), .C1(\cnt1500[6] ), .D0(n1420), 
    .C0(\cnt1500[5] ), .CIN0(n1420), .CIN1(n2288), .F0(n55_adj_32), 
    .F1(n54_adj_33), .COUT1(n1422), .COUT0(n2288));
  SLICE_15 SLICE_15( .D1(n2285), .C1(\cnt1500[4] ), .D0(n1418), 
    .C0(\cnt1500[3] ), .CIN0(n1418), .CIN1(n2285), .F0(n57_2), .F1(n56), 
    .COUT1(n1420), .COUT0(n2285));
  SLICE_16 SLICE_16( .D1(n2282), .C1(\cnt1500[2] ), .D0(n1416), .C0(n10), 
    .CIN0(n1416), .CIN1(n2282), .F0(n59_adj_28), .F1(n58_adj_30), 
    .COUT1(n1418), .COUT0(n2282));
  SLICE_17 SLICE_17( .D1(n2300), .C1(\usecond_cntr[4] ), .D0(n1407), 
    .C0(\usecond_cntr[3] ), .CIN0(n1407), .CIN1(n2300), .F0(n52), .F1(n51), 
    .COUT1(n1409), .COUT0(n2300));
  SLICE_18 SLICE_18( .DI1(n42), .DI0(n43), .D1(n2279), .C1(\cnt200[8] ), 
    .D0(n1434), .C0(\cnt200[7] ), .LSR(cnt200_8__N_39), .CLK(pinms_c), 
    .CIN0(n1434), .CIN1(n2279), .Q0(\cnt200[7] ), .Q1(\cnt200[8] ), .F0(n43), 
    .F1(n42), .COUT0(n2279));
  SLICE_19 SLICE_19( .DI1(n44), .DI0(n45_2), .D1(n2276), .C1(\cnt200[6] ), 
    .D0(n1432), .C0(\cnt200[5] ), .LSR(cnt200_8__N_39), .CLK(pinms_c), 
    .CIN0(n1432), .CIN1(n2276), .Q0(\cnt200[5] ), .Q1(\cnt200[6] ), .F0(n45_2), 
    .F1(n44), .COUT1(n1434), .COUT0(n2276));
  SLICE_20 SLICE_20( .D1(n2261), .C1(\msecond_cntr[8] ), .D0(n1444), 
    .C0(\msecond_cntr[7] ), .CIN0(n1444), .CIN1(n2261), .F0(n48_adj_13), 
    .F1(n47_adj_14), .COUT1(n1446), .COUT0(n2261));
  SLICE_21 SLICE_21( .D1(n2309), .D0(n1413), .C0(pinms_c), .CIN0(n1413), 
    .CIN1(n2309), .F0(n46), .COUT0(n2309));
  SLICE_22 SLICE_22( .D1(n2240), .C1(\usecond_cntr[0] ), .B1(VCC_net), 
    .CIN1(n2240), .F1(n55), .COUT1(n1405), .COUT0(n2240));
  SLICE_23 SLICE_23( .DI0(\VCC_net\000.BUF1 ), .CE(n4), .LSR(pb0_N_231), 
    .CLK(pinms_c), .Q0(sframe_c), .F0(\VCC_net\000.BUF1 ));
  SLICE_24 SLICE_24( .DI1(n33), .DI0(tick_cntr_max_N_230), .D1(\tick_cntr[4] ), 
    .C1(n1387), .B1(tick_cntr_max), .A1(\tick_cntr[3] ), .D0(n1740), 
    .C0(\tick_cntr[4] ), .B0(\tick_cntr[0] ), .A0(\tick_cntr[2] ), 
    .LSR(pb0_N_231), .CLK(clk_c), .Q0(tick_cntr_max), .Q1(\tick_cntr[4] ), 
    .F0(tick_cntr_max_N_230), .F1(n33));
  SLICE_25 SLICE_25( .DI1(\n789.sig_040.FeedThruLUT ), 
    .DI0(\n786.sig_000.FeedThruLUT ), .C1(n789), .B0(n786), .LSR(pb0_N_231), 
    .CLK(\msecond_cntr[3] ), .Q0(n789), .Q1(n788), 
    .F0(\n786.sig_000.FeedThruLUT ), .F1(\n789.sig_040.FeedThruLUT ));
  SLICE_26 SLICE_26( .DI0(msecond_cntr_max_N_235), .D0(\msecond_cntr[5] ), 
    .C0(n6), .B0(\msecond_cntr[6] ), .A0(\msecond_cntr[7] ), 
    .CE(msecond_cntr_9__N_155), .LSR(pb0_N_231), .CLK(clk_c), 
    .Q0(msecond_cntr_max), .F0(msecond_cntr_max_N_235));
  SLICE_27 SLICE_27( .DI1(n59), .DI0(usecond_cntr_max_N_233), .C1(n47), 
    .A1(usecond_cntr_max), .D0(n1758), .C0(\usecond_cntr[0] ), 
    .B0(\usecond_cntr[3] ), .A0(\usecond_cntr[4] ), .CE(tick_cntr_max), 
    .LSR(pb0_N_231), .CLK(clk_c), .Q0(usecond_cntr_max), 
    .Q1(\usecond_cntr[8] ), .F0(usecond_cntr_max_N_233), .F1(n59));
  SLICE_28 SLICE_28( .DI1(\shiftreg[23].sig_037.FeedThruLUT ), 
    .DI0(\shiftreg[22].sig_001.FeedThruLUT ), .C1(\shiftreg[23] ), 
    .C0(\shiftreg[22] ), .LSR(pb0_N_231), .CLK(sdcf77_c), .Q0(\shiftreg[21] ), 
    .Q1(\shiftreg[22] ), .F0(\shiftreg[22].sig_001.FeedThruLUT ), 
    .F1(\shiftreg[23].sig_037.FeedThruLUT ));
  SLICE_29 SLICE_29( .DI1(n66), .DI0(n67), .D1(usecond_cntr_max), .B1(n54), 
    .C0(usecond_cntr_max), .A0(n55), .CE(tick_cntr_max), .LSR(pb0_N_231), 
    .CLK(clk_c), .Q0(\usecond_cntr[0] ), .Q1(\usecond_cntr[1] ), .F0(n67), 
    .F1(n66));
  SLICE_30 SLICE_30( .DI1(n72), .DI0(n73), .C1(n59_adj_28), .A1(sdcf77_c), 
    .C0(n60_adj_27), .B0(sdcf77_c), .LSR(pb0_N_231), .CLK(pinms_c), .Q0(n11), 
    .Q1(n10), .F0(n73), .F1(n72));
  SLICE_31 SLICE_31( .DI1(n36), .DI0(n1520), .D1(tick_cntr_max), 
    .B1(\tick_cntr[1] ), .A1(\tick_cntr[0] ), .C0(tick_cntr_max), 
    .B0(\tick_cntr[0] ), .LSR(pb0_N_231), .CLK(clk_c), .Q0(\tick_cntr[0] ), 
    .Q1(\tick_cntr[1] ), .F0(n1520), .F1(n36));
  SLICE_32 SLICE_32( .DI1(n66_adj_38), .DI0(n67_adj_39), .D1(msecond_cntr_max), 
    .B1(n54_adj_8), .B0(n55_adj_7), .A0(msecond_cntr_max), 
    .CE(msecond_cntr_9__N_155), .LSR(pb0_N_231), .CLK(clk_c), 
    .Q0(\msecond_cntr[0] ), .Q1(\msecond_cntr[1] ), .F0(n67_adj_39), 
    .F1(n66_adj_38));
  SLICE_33 SLICE_33( .DI1(n59_adj_5), .DI0(n58_adj_6), .D1(msecond_cntr_max), 
    .B1(n47_adj_14), .D0(n46_adj_15), .C0(msecond_cntr_max), 
    .CE(msecond_cntr_9__N_155), .LSR(pb0_N_231), .CLK(clk_c), 
    .Q0(\msecond_cntr[9] ), .Q1(\msecond_cntr[8] ), .F0(n58_adj_6), 
    .F1(n59_adj_5));
  SLICE_35 SLICE_35( .DI1(n61_adj_3), .DI0(n60_adj_4), .D1(n49_2), 
    .B1(msecond_cntr_max), .D0(n48_adj_13), .C0(msecond_cntr_max), 
    .CE(msecond_cntr_9__N_155), .LSR(pb0_N_231), .CLK(clk_c), 
    .Q0(\msecond_cntr[7] ), .Q1(\msecond_cntr[6] ), .F0(n60_adj_4), 
    .F1(n61_adj_3));
  SLICE_37 SLICE_37( .DI1(n63), .DI0(n62_2), .B1(n51_adj_11), 
    .A1(msecond_cntr_max), .D0(msecond_cntr_max), .B0(n50_adj_12), 
    .CE(msecond_cntr_9__N_155), .LSR(pb0_N_231), .CLK(clk_c), 
    .Q0(\msecond_cntr[5] ), .Q1(\msecond_cntr[4] ), .F0(n62_2), .F1(n63));
  SLICE_39 SLICE_39( .DI1(n65_adj_37), .DI0(n64_adj_36), .D1(n53_adj_9), 
    .C1(msecond_cntr_max), .D0(msecond_cntr_max), .B0(n52_adj_10), 
    .CE(msecond_cntr_9__N_155), .LSR(pb0_N_231), .CLK(clk_c), 
    .Q0(\msecond_cntr[3] ), .Q1(\msecond_cntr[2] ), .F0(n64_adj_36), 
    .F1(n65_adj_37));
  SLICE_43 SLICE_43( .DI1(n35), .DI0(n34), .D1(\tick_cntr[1] ), 
    .C1(\tick_cntr[0] ), .B1(\tick_cntr[2] ), .A1(tick_cntr_max), 
    .D0(\tick_cntr[3] ), .B0(n1387), .A0(tick_cntr_max), .LSR(pb0_N_231), 
    .CLK(clk_c), .Q0(\tick_cntr[3] ), .Q1(\tick_cntr[2] ), .F0(n34), .F1(n35));
  SLICE_46 SLICE_46( .DI0(n63_adj_26), .D0(sdcf77_c), .C0(n50_adj_31), 
    .LSR(pb0_N_231), .CLK(pinms_c), .Q0(\cnt1500[10] ), .F0(n63_adj_26));
  SLICE_47 SLICE_47( .DI1(n65_adj_22), .DI0(n64_adj_21), .D1(n52_adj_35), 
    .B1(sdcf77_c), .D0(n51_adj_29), .C0(sdcf77_c), .LSR(pb0_N_231), 
    .CLK(pinms_c), .Q0(\cnt1500[9] ), .Q1(\cnt1500[8] ), .F0(n64_adj_21), 
    .F1(n65_adj_22));
  SLICE_49 SLICE_49( .DI1(n67_adj_24), .DI0(n66_adj_23), .D1(n54_adj_33), 
    .B1(sdcf77_c), .B0(n53_adj_34), .A0(sdcf77_c), .LSR(pb0_N_231), 
    .CLK(pinms_c), .Q0(\cnt1500[7] ), .Q1(\cnt1500[6] ), .F0(n66_adj_23), 
    .F1(n67_adj_24));
  SLICE_51 SLICE_51( .DI1(n69), .DI0(n68), .B1(n56), .A1(sdcf77_c), 
    .D0(sdcf77_c), .B0(n55_adj_32), .LSR(pb0_N_231), .CLK(pinms_c), 
    .Q0(\cnt1500[5] ), .Q1(\cnt1500[4] ), .F0(n68), .F1(n69));
  SLICE_53 SLICE_53( .DI1(n71), .DI0(n70), .B1(n58_adj_30), .A1(sdcf77_c), 
    .D0(sdcf77_c), .B0(n57_2), .LSR(pb0_N_231), .CLK(pinms_c), 
    .Q0(\cnt1500[3] ), .Q1(\cnt1500[2] ), .F0(n70), .F1(n71));
  SLICE_58 SLICE_58( .DI1(n61), .DI0(n60), .D1(n49_adj_25), 
    .B1(usecond_cntr_max), .C0(usecond_cntr_max), .B0(n48), .CE(tick_cntr_max), 
    .LSR(pb0_N_231), .CLK(clk_c), .Q0(\usecond_cntr[7] ), 
    .Q1(\usecond_cntr[6] ), .F0(n60), .F1(n61));
  SLICE_60 SLICE_60( .DI1(n63_adj_1), .DI0(n62_adj_2), .B1(n51), 
    .A1(usecond_cntr_max), .B0(usecond_cntr_max), .A0(n50), .CE(tick_cntr_max), 
    .LSR(pb0_N_231), .CLK(clk_c), .Q0(\usecond_cntr[5] ), 
    .Q1(\usecond_cntr[4] ), .F0(n62_adj_2), .F1(n63_adj_1));
  SLICE_62 SLICE_62( .DI1(n65), .DI0(n64), .C1(usecond_cntr_max), .B1(n53), 
    .D0(usecond_cntr_max), .B0(n52), .CE(tick_cntr_max), .LSR(pb0_N_231), 
    .CLK(clk_c), .Q0(\usecond_cntr[3] ), .Q1(\usecond_cntr[2] ), .F0(n64), 
    .F1(n65));
  SLICE_65 SLICE_65( .DI1(\shiftreg[58].sig_002.FeedThruLUT ), 
    .DI0(\sdatabit_c$n0 ), .C1(\shiftreg[58] ), .D0(sdcf77_c), .C0(n1844), 
    .B0(pb0_c), .A0(sdatabit_c), .LSR(pb0_N_231), .CLK(sdcf77_c), 
    .Q0(\shiftreg[58] ), .Q1(\shiftreg[57] ), .F0(\sdatabit_c$n0 ), 
    .F1(\shiftreg[58].sig_002.FeedThruLUT ));
  SLICE_67 SLICE_67( .DI1(\shiftreg[56].sig_004.FeedThruLUT ), 
    .DI0(\shiftreg[57].sig_003.FeedThruLUT ), .A1(\shiftreg[56] ), 
    .C0(\shiftreg[57] ), .LSR(pb0_N_231), .CLK(sdcf77_c), .Q0(\shiftreg[56] ), 
    .Q1(\shiftreg[55] ), .F0(\shiftreg[57].sig_003.FeedThruLUT ), 
    .F1(\shiftreg[56].sig_004.FeedThruLUT ));
  SLICE_69 SLICE_69( .DI1(\shiftreg[54].sig_006.FeedThruLUT ), 
    .DI0(\shiftreg[55].sig_005.FeedThruLUT ), .C1(\shiftreg[54] ), 
    .A0(\shiftreg[55] ), .LSR(pb0_N_231), .CLK(sdcf77_c), .Q0(\shiftreg[54] ), 
    .Q1(\shiftreg[53] ), .F0(\shiftreg[55].sig_005.FeedThruLUT ), 
    .F1(\shiftreg[54].sig_006.FeedThruLUT ));
  SLICE_71 SLICE_71( .DI1(\shiftreg[52].sig_008.FeedThruLUT ), 
    .DI0(\shiftreg[53].sig_007.FeedThruLUT ), .A1(\shiftreg[52] ), 
    .D0(\shiftreg[53] ), .LSR(pb0_N_231), .CLK(sdcf77_c), .Q0(\shiftreg[52] ), 
    .Q1(\shiftreg[51] ), .F0(\shiftreg[53].sig_007.FeedThruLUT ), 
    .F1(\shiftreg[52].sig_008.FeedThruLUT ));
  SLICE_73 SLICE_73( .DI1(\shiftreg[50].sig_010.FeedThruLUT ), 
    .DI0(\shiftreg[51].sig_009.FeedThruLUT ), .A1(\shiftreg[50] ), 
    .C0(\shiftreg[51] ), .LSR(pb0_N_231), .CLK(sdcf77_c), .Q0(\shiftreg[50] ), 
    .Q1(\shiftreg[49] ), .F0(\shiftreg[51].sig_009.FeedThruLUT ), 
    .F1(\shiftreg[50].sig_010.FeedThruLUT ));
  SLICE_75 SLICE_75( .DI1(\shiftreg[48].sig_012.FeedThruLUT ), 
    .DI0(\shiftreg[49].sig_011.FeedThruLUT ), .A1(\shiftreg[48] ), 
    .A0(\shiftreg[49] ), .LSR(pb0_N_231), .CLK(sdcf77_c), .Q0(\shiftreg[48] ), 
    .Q1(\shiftreg[47] ), .F0(\shiftreg[49].sig_011.FeedThruLUT ), 
    .F1(\shiftreg[48].sig_012.FeedThruLUT ));
  SLICE_77 SLICE_77( .DI1(\shiftreg[46].sig_014.FeedThruLUT ), 
    .DI0(\shiftreg[47].sig_013.FeedThruLUT ), .A1(\shiftreg[46] ), 
    .A0(\shiftreg[47] ), .LSR(pb0_N_231), .CLK(sdcf77_c), .Q0(\shiftreg[46] ), 
    .Q1(\shiftreg[45] ), .F0(\shiftreg[47].sig_013.FeedThruLUT ), 
    .F1(\shiftreg[46].sig_014.FeedThruLUT ));
  SLICE_79 SLICE_79( .DI1(\shiftreg[44].sig_016.FeedThruLUT ), 
    .DI0(\shiftreg[45].sig_015.FeedThruLUT ), .A1(\shiftreg[44] ), 
    .A0(\shiftreg[45] ), .LSR(pb0_N_231), .CLK(sdcf77_c), .Q0(\shiftreg[44] ), 
    .Q1(\shiftreg[43] ), .F0(\shiftreg[45].sig_015.FeedThruLUT ), 
    .F1(\shiftreg[44].sig_016.FeedThruLUT ));
  SLICE_81 SLICE_81( .DI1(\shiftreg[42].sig_018.FeedThruLUT ), 
    .DI0(\shiftreg[43].sig_017.FeedThruLUT ), .C1(\shiftreg[42] ), 
    .A0(\shiftreg[43] ), .LSR(pb0_N_231), .CLK(sdcf77_c), .Q0(\shiftreg[42] ), 
    .Q1(\shiftreg[41] ), .F0(\shiftreg[43].sig_017.FeedThruLUT ), 
    .F1(\shiftreg[42].sig_018.FeedThruLUT ));
  SLICE_83 SLICE_83( .DI1(\shiftreg[40].sig_020.FeedThruLUT ), 
    .DI0(\shiftreg[41].sig_019.FeedThruLUT ), .A1(\shiftreg[40] ), 
    .C0(\shiftreg[41] ), .LSR(pb0_N_231), .CLK(sdcf77_c), .Q0(\shiftreg[40] ), 
    .Q1(\shiftreg[39] ), .F0(\shiftreg[41].sig_019.FeedThruLUT ), 
    .F1(\shiftreg[40].sig_020.FeedThruLUT ));
  SLICE_85 SLICE_85( .DI1(\shiftreg[38].sig_022.FeedThruLUT ), 
    .DI0(\shiftreg[39].sig_021.FeedThruLUT ), .A1(\shiftreg[38] ), 
    .D0(\shiftreg[39] ), .LSR(pb0_N_231), .CLK(sdcf77_c), .Q0(\shiftreg[38] ), 
    .Q1(\shiftreg[37] ), .F0(\shiftreg[39].sig_021.FeedThruLUT ), 
    .F1(\shiftreg[38].sig_022.FeedThruLUT ));
  SLICE_87 SLICE_87( .DI1(\shiftreg[36].sig_024.FeedThruLUT ), 
    .DI0(\shiftreg[37].sig_023.FeedThruLUT ), .C1(\shiftreg[36] ), 
    .D0(\shiftreg[37] ), .LSR(pb0_N_231), .CLK(sdcf77_c), .Q0(\shiftreg[36] ), 
    .Q1(\shiftreg[35] ), .F0(\shiftreg[37].sig_023.FeedThruLUT ), 
    .F1(\shiftreg[36].sig_024.FeedThruLUT ));
  SLICE_89 SLICE_89( .DI1(\shiftreg[34].sig_026.FeedThruLUT ), 
    .DI0(\shiftreg[35].sig_025.FeedThruLUT ), .A1(\shiftreg[34] ), 
    .C0(\shiftreg[35] ), .LSR(pb0_N_231), .CLK(sdcf77_c), .Q0(\shiftreg[34] ), 
    .Q1(\shiftreg[33] ), .F0(\shiftreg[35].sig_025.FeedThruLUT ), 
    .F1(\shiftreg[34].sig_026.FeedThruLUT ));
  SLICE_91 SLICE_91( .DI1(\shiftreg[32].sig_028.FeedThruLUT ), 
    .DI0(\shiftreg[33].sig_027.FeedThruLUT ), .C1(\shiftreg[32] ), 
    .C0(\shiftreg[33] ), .LSR(pb0_N_231), .CLK(sdcf77_c), .Q0(\shiftreg[32] ), 
    .Q1(\shiftreg[31] ), .F0(\shiftreg[33].sig_027.FeedThruLUT ), 
    .F1(\shiftreg[32].sig_028.FeedThruLUT ));
  SLICE_93 SLICE_93( .DI1(\shiftreg[30].sig_030.FeedThruLUT ), 
    .DI0(\shiftreg[31].sig_029.FeedThruLUT ), .A1(\shiftreg[30] ), 
    .A0(\shiftreg[31] ), .LSR(pb0_N_231), .CLK(sdcf77_c), .Q0(\shiftreg[30] ), 
    .Q1(\shiftreg[29] ), .F0(\shiftreg[31].sig_029.FeedThruLUT ), 
    .F1(\shiftreg[30].sig_030.FeedThruLUT ));
  SLICE_95 SLICE_95( .DI1(\shiftreg[28].sig_032.FeedThruLUT ), 
    .DI0(\shiftreg[29].sig_031.FeedThruLUT ), .C1(\shiftreg[28] ), 
    .C0(\shiftreg[29] ), .LSR(pb0_N_231), .CLK(sdcf77_c), .Q0(\shiftreg[28] ), 
    .Q1(\shiftreg[27] ), .F0(\shiftreg[29].sig_031.FeedThruLUT ), 
    .F1(\shiftreg[28].sig_032.FeedThruLUT ));
  SLICE_97 SLICE_97( .DI1(\shiftreg[26].sig_034.FeedThruLUT ), 
    .DI0(\shiftreg[27].sig_033.FeedThruLUT ), .A1(\shiftreg[26] ), 
    .C0(\shiftreg[27] ), .LSR(pb0_N_231), .CLK(sdcf77_c), .Q0(\shiftreg[26] ), 
    .Q1(\shiftreg[25] ), .F0(\shiftreg[27].sig_033.FeedThruLUT ), 
    .F1(\shiftreg[26].sig_034.FeedThruLUT ));
  SLICE_99 SLICE_99( .DI1(\shiftreg[24].sig_036.FeedThruLUT ), 
    .DI0(\shiftreg[25].sig_035.FeedThruLUT ), .C1(\shiftreg[24] ), 
    .A0(\shiftreg[25] ), .LSR(pb0_N_231), .CLK(sdcf77_c), .Q0(\shiftreg[24] ), 
    .Q1(\shiftreg[23] ), .F0(\shiftreg[25].sig_035.FeedThruLUT ), 
    .F1(\shiftreg[24].sig_036.FeedThruLUT ));
  SLICE_102 SLICE_102( .DI1(\n788.sig_039.FeedThruLUT ), 
    .DI0(\n787.sig_038.FeedThruLUT ), .B1(n788), .A0(n787), .LSR(pb0_N_231), 
    .CLK(\msecond_cntr[3] ), .Q0(n786), .Q1(n787), 
    .F0(\n787.sig_038.FeedThruLUT ), .F1(\n788.sig_039.FeedThruLUT ));
  SLICE_105 SLICE_105( .DI0(\shiftreg[35].sig_041.FeedThruLUT ), 
    .C0(\shiftreg[35] ), .CE(pinms_c_enable_4), .CLK(pinms_c), 
    .Q0(\memreg[35] ), .F0(\shiftreg[35].sig_041.FeedThruLUT ));
  SLICE_106 SLICE_106( .DI1(\shiftreg[33].sig_043.FeedThruLUT ), 
    .DI0(\shiftreg[34].sig_042.FeedThruLUT ), .C1(\shiftreg[33] ), 
    .D0(\shiftreg[34] ), .CE(pinms_c_enable_4), .CLK(pinms_c), 
    .Q0(\memreg[34] ), .Q1(\memreg[33] ), 
    .F0(\shiftreg[34].sig_042.FeedThruLUT ), 
    .F1(\shiftreg[33].sig_043.FeedThruLUT ));
  SLICE_108 SLICE_108( .DI1(\shiftreg[31].sig_045.FeedThruLUT ), 
    .DI0(\shiftreg[32].sig_044.FeedThruLUT ), .C1(\shiftreg[31] ), 
    .D0(\shiftreg[32] ), .CE(pinms_c_enable_4), .CLK(pinms_c), 
    .Q0(\memreg[32] ), .Q1(\memreg[31] ), 
    .F0(\shiftreg[32].sig_044.FeedThruLUT ), 
    .F1(\shiftreg[31].sig_045.FeedThruLUT ));
  SLICE_110 SLICE_110( .DI1(\shiftreg[28].sig_047.FeedThruLUT ), 
    .DI0(\shiftreg[30].sig_046.FeedThruLUT ), .D1(\shiftreg[28] ), 
    .B0(\shiftreg[30] ), .CE(pinms_c_enable_4), .CLK(pinms_c), 
    .Q0(\memreg[30] ), .Q1(\memreg[28] ), 
    .F0(\shiftreg[30].sig_046.FeedThruLUT ), 
    .F1(\shiftreg[28].sig_047.FeedThruLUT ));
  SLICE_112 SLICE_112( .DI1(\shiftreg[26].sig_049.FeedThruLUT ), 
    .DI0(\shiftreg[27].sig_048.FeedThruLUT ), .D1(\shiftreg[26] ), 
    .A0(\shiftreg[27] ), .CE(pinms_c_enable_4), .CLK(pinms_c), 
    .Q0(\memreg[27] ), .Q1(\memreg[26] ), 
    .F0(\shiftreg[27].sig_048.FeedThruLUT ), 
    .F1(\shiftreg[26].sig_049.FeedThruLUT ));
  SLICE_114 SLICE_114( .DI1(\shiftreg[24].sig_051.FeedThruLUT ), 
    .DI0(\shiftreg[25].sig_050.FeedThruLUT ), .C1(\shiftreg[24] ), 
    .A0(\shiftreg[25] ), .CE(pinms_c_enable_4), .CLK(pinms_c), 
    .Q0(\memreg[25] ), .Q1(\memreg[24] ), 
    .F0(\shiftreg[25].sig_050.FeedThruLUT ), 
    .F1(\shiftreg[24].sig_051.FeedThruLUT ));
  SLICE_116 SLICE_116( .DI1(\shiftreg[22].sig_053.FeedThruLUT ), 
    .DI0(\shiftreg[23].sig_052.FeedThruLUT ), .B1(\shiftreg[22] ), 
    .C0(\shiftreg[23] ), .CE(pinms_c_enable_4), .CLK(pinms_c), 
    .Q0(\memreg[23] ), .Q1(\memreg[22] ), 
    .F0(\shiftreg[23].sig_052.FeedThruLUT ), 
    .F1(\shiftreg[22].sig_053.FeedThruLUT ));
  SLICE_118 SLICE_118( .D1(n886), .C1(\memreg[27] ), .B1(n833), 
    .A1(\memreg[35] ), .B0(n787), .A0(n786), .F0(n833), .F1(n2049));
  SLICE_119 SLICE_119( .D1(\bcd[0] ), .C1(\bcd[1] ), .B1(\bcd[2] ), 
    .A1(\bcd[3] ), .D0(\memreg[31] ), .C0(\memreg[23] ), .B0(n886), .A0(n2049), 
    .F0(\bcd[1] ), .F1(segment_c_5));
  SLICE_120 SLICE_120( .D1(n886), .C1(\memreg[22] ), .B1(n2043), 
    .A1(\memreg[30] ), .D0(n886), .C0(\memreg[26] ), .B0(\memreg[34] ), 
    .A0(n833), .F0(n2043), .F1(\bcd[0] ));
  SLICE_122 SLICE_122( .D0(\bcd[3] ), .C0(\bcd[2] ), .B0(\bcd[1] ), 
    .A0(\bcd[0] ), .F0(segment_c_6));
  SLICE_123 SLICE_123( .D1(\memreg[25] ), .C1(n886), .B1(\memreg[33] ), 
    .A1(n833), .D0(n787), .C0(n788), .B0(n786), .F0(n886), .F1(\bcd[3] ));
  SLICE_125 SLICE_125( .D1(n833), .C1(\memreg[28] ), .B1(n886), .A1(n899), 
    .D0(n787), .C0(\memreg[32] ), .B0(n786), .A0(\memreg[24] ), .F0(n899), 
    .F1(\bcd[2] ));
  SLICE_126 SLICE_126( .D1(pinms_c), .C1(n1750), .B1(\usecond_cntr[1] ), 
    .A1(\usecond_cntr[8] ), .D0(\usecond_cntr[6] ), .C0(\usecond_cntr[2] ), 
    .B0(\usecond_cntr[5] ), .A0(\usecond_cntr[7] ), .F0(n1750), .F1(n1758));
  SLICE_128 SLICE_128( .C1(pb0_c), .A1(n4), .D0(sdcf77_c), .C0(n1596), 
    .B0(\cnt1500[10] ), .A0(\cnt1500[9] ), .F0(n4), .F1(pinms_c_enable_4));
  SLICE_130 SLICE_130( .D1(\msecond_cntr[1] ), .C1(\msecond_cntr[8] ), 
    .B1(\msecond_cntr[2] ), .A1(n16), .D0(\msecond_cntr[0] ), 
    .C0(\msecond_cntr[4] ), .B0(\msecond_cntr[9] ), .A0(\msecond_cntr[3] ), 
    .F0(n16), .F1(n6));
  SLICE_132 SLICE_132( .D1(\cnt1500[6] ), .C1(n12), .B1(\cnt1500[8] ), 
    .A1(\cnt1500[7] ), .D0(\cnt1500[5] ), .C0(\cnt1500[3] ), .B0(\cnt1500[4] ), 
    .A0(\cnt1500[2] ), .F0(n12), .F1(n1596));
  SLICE_134 SLICE_134( .D1(\cnt200[5] ), .C1(n1850), .B1(\cnt200[4] ), 
    .A1(\cnt200[3] ), .C0(\cnt200[1] ), .A0(\cnt200[2] ), .F0(n1850), 
    .F1(n1847));
  SLICE_136 SLICE_136( .D1(sdatabit_c), .C1(n1844), .B1(pb0_c), .A1(sdcf77_c), 
    .D0(\cnt200[6] ), .C0(n1847), .B0(\cnt200[7] ), .A0(\cnt200[8] ), 
    .F0(n1844), .F1(sdatabit_c));
  SLICE_138 SLICE_138( .D0(\bcd[0] ), .C0(\bcd[1] ), .B0(\bcd[3] ), 
    .A0(\bcd[2] ), .F0(segment_c_4));
  SLICE_139 SLICE_139( .D1(\bcd[1] ), .C1(\bcd[0] ), .B1(\bcd[2] ), 
    .A1(\bcd[3] ), .D0(\bcd[3] ), .C0(\bcd[1] ), .B0(\bcd[0] ), .A0(\bcd[2] ), 
    .F0(segment_c_1), .F1(segment_c_3));
  SLICE_141 SLICE_141( .D1(\bcd[2] ), .C1(\bcd[1] ), .B1(\bcd[0] ), 
    .A1(\bcd[3] ), .D0(\bcd[3] ), .C0(\bcd[0] ), .B0(\bcd[1] ), .A0(\bcd[2] ), 
    .F0(segment_c_0), .F1(segment_c_2));
  SLICE_143 SLICE_143( .C1(n787), .B1(n786), .A1(n788), .D0(n788), .C0(n786), 
    .B0(n787), .F0(select7seg_c_1), .F1(select7seg_c_0));
  SLICE_146 SLICE_146( .C1(\tick_cntr[3] ), .B1(\tick_cntr[1] ), 
    .D0(\tick_cntr[0] ), .C0(\tick_cntr[1] ), .A0(\tick_cntr[2] ), .F0(n1387), 
    .F1(n1740));
  SLICE_150 SLICE_150( .F0(VCC_net));
  SLICE_151 SLICE_151( .D1(pb0_c), .C0(sdcf77_c), .A0(pb0_c), 
    .F0(cnt200_8__N_39), .F1(pb0_N_231));
  SLICE_152 SLICE_152( .DI1(n58), .C1(n46), .A1(usecond_cntr_max), 
    .D0(usecond_cntr_max), .A0(tick_cntr_max), .CE(tick_cntr_max), 
    .LSR(pb0_N_231), .CLK(clk_c), .Q1(pinms_c), .F0(msecond_cntr_9__N_155), 
    .F1(n58));
  SLICE_154 SLICE_154( .D1(n786), .C1(n787), .A0(n786), .F0(select7seg_c_3), 
    .F1(select7seg_c_2));
  s8421_i0_i4 s8421_i0_i4( .DO0(\shiftreg[24] ), .CE(pinms_c_enable_4), 
    .OUTCLK(pinms_c), .PADDO(s8421_c_3));
  syncdcf77 syncdcf77( .PADDI(dcf77_c), .INCLK(clk_c), .DI0(sdcf77_c));
  s8421_i0_i3 s8421_i0_i3( .DO0(\shiftreg[23] ), .CE(pinms_c_enable_4), 
    .OUTCLK(pinms_c), .PADDO(s8421_c_2));
  s8421_i0_i2 s8421_i0_i2( .DO0(\shiftreg[22] ), .CE(pinms_c_enable_4), 
    .OUTCLK(pinms_c), .PADDO(s8421_c_1));
  s8421_i0_i1 s8421_i0_i1( .DO0(\shiftreg[21] ), .CE(pinms_c_enable_4), 
    .OUTCLK(pinms_c), .PADDO(s8421_c_0));
  dcf77 dcf77_I( .PADDI(dcf77_c), .dcf77(dcf77));
  pb0 pb0_I( .PADDI(pb0_c), .pb0(pb0));
  clk clk_I( .PADDI(clk_c), .clk(clk));
  s8421_0_ \s8421[0]_I ( .PADDO(s8421_c_0), .s84210(s8421[0]));
  s8421_1_ \s8421[1]_I ( .PADDO(s8421_c_1), .s84211(s8421[1]));
  s8421_2_ \s8421[2]_I ( .PADDO(s8421_c_2), .s84212(s8421[2]));
  s8421_3_ \s8421[3]_I ( .PADDO(s8421_c_3), .s84213(s8421[3]));
  select7seg_0_ \select7seg[0]_I ( .PADDO(select7seg_c_0), 
    .select7seg0(select7seg[0]));
  select7seg_1_ \select7seg[1]_I ( .PADDO(select7seg_c_1), 
    .select7seg1(select7seg[1]));
  select7seg_2_ \select7seg[2]_I ( .PADDO(select7seg_c_2), 
    .select7seg2(select7seg[2]));
  select7seg_3_ \select7seg[3]_I ( .PADDO(select7seg_c_3), 
    .select7seg3(select7seg[3]));
  segment_0_ \segment[0]_I ( .PADDO(segment_c_0), .segment0(segment[0]));
  segment_1_ \segment[1]_I ( .PADDO(segment_c_1), .segment1(segment[1]));
  segment_2_ \segment[2]_I ( .PADDO(segment_c_2), .segment2(segment[2]));
  segment_3_ \segment[3]_I ( .PADDO(segment_c_3), .segment3(segment[3]));
  segment_4_ \segment[4]_I ( .PADDO(segment_c_4), .segment4(segment[4]));
  segment_5_ \segment[5]_I ( .PADDO(segment_c_5), .segment5(segment[5]));
  segment_6_ \segment[6]_I ( .PADDO(segment_c_6), .segment6(segment[6]));
  sdatabit sdatabit_I( .PADDO(sdatabit_c), .sdatabit(sdatabit));
  sframe sframe_I( .PADDO(sframe_c), .sframe(sframe));
  sdcf77 sdcf77_I( .PADDO(sdcf77_c), .sdcf77(sdcf77));
  pinms pinms_I( .PADDO(pinms_c), .pinms(pinms));
endmodule

module SLICE_0 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 msecond_cntr_169_add_4_7( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module fa2 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI0, CI1, output S0, S1, 
    CO0, CO1 );

  FA2 inst1( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .CI0(CI0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI1(CI1), .CO0(CO0), .CO1(CO1), .S0(S0), .S1(S1));
  defparam inst1.INIT0 = "0xc33c";
  defparam inst1.INIT1 = "0xc33c";
endmodule

module gnd ( output PWR0 );

  VLO INST1( .Z(PWR0));
endmodule

module SLICE_1 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 usecond_cntr_168_add_4_3( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2 ( input D1, C1, B1, CIN1, output F1, COUT1, COUT0 );
  wire   GNDI, VCCI;

  fa2 cnt1500_171_add_4_1( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module vcc ( output PWR1 );

  VHI INST1( .Z(PWR1));
endmodule

module SLICE_3 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 usecond_cntr_168_add_4_7( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_4 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, output 
    Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 cnt200_170_add_4_5( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 cnt200_170__i4( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 cnt200_170__i5( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module ffsre2 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "RESET";
  defparam INST01.SRMODE = "ASYNC";
endmodule

module SLICE_5 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 msecond_cntr_169_add_4_5( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_6 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 usecond_cntr_168_add_4_9( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_7 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, output 
    Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 cnt200_170_add_4_3( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 cnt200_170__i2( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 cnt200_170__i3( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_8 ( input DI1, D1, C1, B1, LSR, CLK, CIN1, output Q1, F1, COUT1, 
    COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  fa2 cnt200_170_add_4_1( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 cnt200_170__i1( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_9 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, F1, COUT0 );
  wire   GNDI;

  fa2 cnt1500_171_add_4_11( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_10 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, F1, COUT1, 
    COUT0 );
  wire   GNDI;

  fa2 cnt1500_171_add_4_9( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_11 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, F1, COUT1, 
    COUT0 );
  wire   GNDI;

  fa2 msecond_cntr_169_add_4_3( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_12 ( input D1, C1, B1, CIN1, output F1, COUT1, COUT0 );
  wire   GNDI, VCCI;

  fa2 msecond_cntr_169_add_4_1( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_13 ( input D1, D0, C0, CIN0, CIN1, output F0, COUT0 );
  wire   GNDI;

  fa2 msecond_cntr_169_add_4_11( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_14 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, F1, COUT1, 
    COUT0 );
  wire   GNDI;

  fa2 cnt1500_171_add_4_7( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_15 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, F1, COUT1, 
    COUT0 );
  wire   GNDI;

  fa2 cnt1500_171_add_4_5( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_16 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, F1, COUT1, 
    COUT0 );
  wire   GNDI;

  fa2 cnt1500_171_add_4_3( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_17 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, F1, COUT1, 
    COUT0 );
  wire   GNDI;

  fa2 usecond_cntr_168_add_4_5( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_18 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 cnt200_170_add_4_9( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 cnt200_170__i8( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 cnt200_170__i9( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_19 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 cnt200_170_add_4_7( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 cnt200_170__i6( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 cnt200_170__i7( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_20 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, F1, COUT1, 
    COUT0 );
  wire   GNDI;

  fa2 msecond_cntr_169_add_4_9( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_21 ( input D1, D0, C0, CIN0, CIN1, output F0, COUT0 );
  wire   GNDI;

  fa2 usecond_cntr_168_add_4_11( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_22 ( input D1, C1, B1, CIN1, output F1, COUT1, COUT0 );
  wire   GNDI, VCCI;

  fa2 usecond_cntr_168_add_4_1( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_23 ( input DI0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut4 \VCC_net\000.BUF1.BUF1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 start_frame( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut4 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_24 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40001 i467_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40002 i1014_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 tick_cntr_167__i4( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 tick_cntr_max_c( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40001 ( input A, B, C, D, output Z );

  LUT4 #("0x1320") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40002 ( input A, B, C, D, output Z );

  LUT4 #("0x0100") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_25 ( input DI1, DI0, C1, B0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40003 SLICE_25_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40004 SLICE_25_K0( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 selector_FSM_i1( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20005 selector_FSM_i0( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40003 ( input A, B, C, D, output Z );

  LUT4 #("0xF0F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40004 ( input A, B, C, D, output Z );

  LUT4 #("0xCCCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module ffsre20005 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "SET";
  defparam INST01.SRMODE = "ASYNC";
endmodule

module SLICE_26 ( input DI0, D0, C0, B0, A0, CE, LSR, CLK, output Q0, F0 );
  wire   DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40006 i4_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 msecond_cntr_max_c( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40006 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_27 ( input DI1, DI0, C1, A1, D0, C0, B0, A0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40007 i482_2_lut( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40008 i1009_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 usecond_cntr_168__i8( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 usecond_cntr_max_c( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40007 ( input A, B, C, D, output Z );

  LUT4 #("0x5050") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40008 ( input A, B, C, D, output Z );

  LUT4 #("0x0100") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_28 ( input DI1, DI0, C1, C0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40003 SLICE_28_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 SLICE_28_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 shiftreg__21_i2( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 shiftreg__21_i1( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40009 ( input A, B, C, D, output Z );

  LUT4 #("0xF0F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_29 ( input DI1, DI0, D1, B1, C0, A0, CE, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40010 i489_2_lut( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40011 i434_2_lut( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 usecond_cntr_168__i1( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 usecond_cntr_168__i0( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40010 ( input A, B, C, D, output Z );

  LUT4 #("0x00CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40011 ( input A, B, C, D, output Z );

  LUT4 #("0x0A0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_30 ( input DI1, DI0, C1, A1, C0, B0, LSR, CLK, output Q0, Q1, F0, 
    F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40007 i480_2_lut( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40012 i447_2_lut( .A(GNDI), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 cnt1500_171__i2( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 cnt1500_171__i1( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40012 ( input A, B, C, D, output Z );

  LUT4 #("0x3030") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_31 ( input DI1, DI0, D1, B1, A1, C0, B0, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40013 i470_3_lut( .A(A1), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40014 i1003_2_lut( .A(GNDI), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 tick_cntr_167__i1( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 tick_cntr_167__i0( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40013 ( input A, B, C, D, output Z );

  LUT4 #("0x0066") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40014 ( input A, B, C, D, output Z );

  LUT4 #("0x0303") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_32 ( input DI1, DI0, D1, B1, B0, A0, CE, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40010 i466_2_lut( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40015 i451_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 msecond_cntr_169__i1( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 msecond_cntr_169__i0( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40015 ( input A, B, C, D, output Z );

  LUT4 #("0x4444") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_33 ( input DI1, DI0, D1, B1, D0, C0, CE, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40010 i459_2_lut( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40016 i458_2_lut( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre2 msecond_cntr_169__i8( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 msecond_cntr_169__i9( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40016 ( input A, B, C, D, output Z );

  LUT4 #("0x0F00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_35 ( input DI1, DI0, D1, B1, D0, C0, CE, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40017 i461_2_lut( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40016 i460_2_lut( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre2 msecond_cntr_169__i6( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 msecond_cntr_169__i7( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40017 ( input A, B, C, D, output Z );

  LUT4 #("0x3300") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_37 ( input DI1, DI0, B1, A1, D0, B0, CE, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40018 i463_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40019 i462_2_lut( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 msecond_cntr_169__i4( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 msecond_cntr_169__i5( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40018 ( input A, B, C, D, output Z );

  LUT4 #("0x4444") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40019 ( input A, B, C, D, output Z );

  LUT4 #("0x00CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_39 ( input DI1, DI0, D1, C1, D0, B0, CE, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40020 i465_2_lut( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40019 i464_2_lut( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 msecond_cntr_169__i2( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 msecond_cntr_169__i3( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40020 ( input A, B, C, D, output Z );

  LUT4 #("0x0F00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_43 ( input DI1, DI0, D1, C1, B1, A1, D0, B0, A0, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40021 i469_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40022 i468_3_lut( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 tick_cntr_167__i2( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 tick_cntr_167__i3( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40021 ( input A, B, C, D, output Z );

  LUT4 #("0x1444") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40022 ( input A, B, C, D, output Z );

  LUT4 #("0x1144") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_46 ( input DI0, D0, C0, LSR, CLK, output Q0, F0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40023 i471_2_lut( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 cnt1500_171__i11( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40023 ( input A, B, C, D, output Z );

  LUT4 #("0x00F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_47 ( input DI1, DI0, D1, B1, D0, C0, LSR, CLK, output Q0, Q1, F0, 
    F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40017 i473_2_lut( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40016 i472_2_lut( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre2 cnt1500_171__i9( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 cnt1500_171__i10( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_49 ( input DI1, DI0, D1, B1, B0, A0, LSR, CLK, output Q0, Q1, F0, 
    F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40017 i475_2_lut( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40015 i474_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 cnt1500_171__i7( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 cnt1500_171__i8( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_51 ( input DI1, DI0, B1, A1, D0, B0, LSR, CLK, output Q0, Q1, F0, 
    F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40018 i477_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40019 i476_2_lut( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 cnt1500_171__i5( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 cnt1500_171__i6( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_53 ( input DI1, DI0, B1, A1, D0, B0, LSR, CLK, output Q0, Q1, F0, 
    F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40018 i479_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40019 i478_2_lut( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 cnt1500_171__i3( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 cnt1500_171__i4( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_58 ( input DI1, DI0, D1, B1, C0, B0, CE, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40017 i484_2_lut( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40024 i483_2_lut( .A(GNDI), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 usecond_cntr_168__i6( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 usecond_cntr_168__i7( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40024 ( input A, B, C, D, output Z );

  LUT4 #("0x0C0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_60 ( input DI1, DI0, B1, A1, B0, A0, CE, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40018 i486_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40025 i485_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 usecond_cntr_168__i4( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 usecond_cntr_168__i5( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40025 ( input A, B, C, D, output Z );

  LUT4 #("0x2222") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_62 ( input DI1, DI0, C1, B1, D0, B0, CE, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40026 i488_2_lut( .A(GNDI), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40019 i487_2_lut( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 usecond_cntr_168__i2( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  ffsre2 usecond_cntr_168__i3( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40026 ( input A, B, C, D, output Z );

  LUT4 #("0x0C0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_65 ( input DI1, DI0, C1, D0, C0, B0, A0, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40003 SLICE_65_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40027 SLICE_65_K0( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 shiftreg__21_i37( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 shiftreg__21_i38( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40027 ( input A, B, C, D, output Z );

  LUT4 #("0x88C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_67 ( input DI1, DI0, A1, C0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40028 SLICE_67_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 SLICE_67_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 shiftreg__21_i35( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 shiftreg__21_i36( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40028 ( input A, B, C, D, output Z );

  LUT4 #("0xAAAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_69 ( input DI1, DI0, C1, A0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40003 SLICE_69_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40029 SLICE_69_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 shiftreg__21_i33( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 shiftreg__21_i34( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40029 ( input A, B, C, D, output Z );

  LUT4 #("0xAAAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_71 ( input DI1, DI0, A1, D0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40028 SLICE_71_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40030 SLICE_71_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 shiftreg__21_i31( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 shiftreg__21_i32( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40030 ( input A, B, C, D, output Z );

  LUT4 #("0xFF00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_73 ( input DI1, DI0, A1, C0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40028 SLICE_73_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 SLICE_73_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 shiftreg__21_i29( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 shiftreg__21_i30( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_75 ( input DI1, DI0, A1, A0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40028 SLICE_75_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40029 SLICE_75_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 shiftreg__21_i27( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 shiftreg__21_i28( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_77 ( input DI1, DI0, A1, A0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40028 SLICE_77_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40029 SLICE_77_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 shiftreg__21_i25( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 shiftreg__21_i26( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_79 ( input DI1, DI0, A1, A0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40028 SLICE_79_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40029 SLICE_79_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 shiftreg__21_i23( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 shiftreg__21_i24( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_81 ( input DI1, DI0, C1, A0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40003 SLICE_81_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40029 SLICE_81_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 shiftreg__21_i21( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 shiftreg__21_i22( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_83 ( input DI1, DI0, A1, C0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40028 SLICE_83_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 SLICE_83_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 shiftreg__21_i19( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 shiftreg__21_i20( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_85 ( input DI1, DI0, A1, D0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40028 SLICE_85_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40030 SLICE_85_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 shiftreg__21_i17( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 shiftreg__21_i18( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_87 ( input DI1, DI0, C1, D0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40003 SLICE_87_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40030 SLICE_87_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 shiftreg__21_i15( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 shiftreg__21_i16( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_89 ( input DI1, DI0, A1, C0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40028 SLICE_89_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 SLICE_89_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 shiftreg__21_i13( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 shiftreg__21_i14( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_91 ( input DI1, DI0, C1, C0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40003 SLICE_91_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 SLICE_91_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 shiftreg__21_i11( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 shiftreg__21_i12( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_93 ( input DI1, DI0, A1, A0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40028 SLICE_93_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40029 SLICE_93_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 shiftreg__21_i9( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 shiftreg__21_i10( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_95 ( input DI1, DI0, C1, C0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40003 SLICE_95_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 SLICE_95_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 shiftreg__21_i7( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 shiftreg__21_i8( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_97 ( input DI1, DI0, A1, C0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40028 SLICE_97_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 SLICE_97_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 shiftreg__21_i5( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 shiftreg__21_i6( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_99 ( input DI1, DI0, C1, A0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40003 SLICE_99_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40029 SLICE_99_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 shiftreg__21_i3( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 shiftreg__21_i4( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_102 ( input DI1, DI0, B1, A0, LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40031 SLICE_102_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40029 SLICE_102_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 selector_FSM_i2( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 selector_FSM_i3( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40031 ( input A, B, C, D, output Z );

  LUT4 #("0xCCCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_105 ( input DI0, C0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40009 SLICE_105_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20032 memreg__0__i13( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module ffsre20032 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "RESET";
  defparam INST01.SRMODE = "CE_OVER_LSR";
endmodule

module SLICE_106 ( input DI1, DI0, C1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40003 SLICE_106_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40030 SLICE_106_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre20032 memreg__0__i11( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre20032 memreg__0__i12( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_108 ( input DI1, DI0, C1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40003 SLICE_108_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40030 SLICE_108_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre20032 memreg__0__i9( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre20032 memreg__0__i10( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_110 ( input DI1, DI0, D1, B0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40033 SLICE_110_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40004 SLICE_110_K0( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre20032 memreg__0__i7( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre20032 memreg__0__i8( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40033 ( input A, B, C, D, output Z );

  LUT4 #("0xFF00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_112 ( input DI1, DI0, D1, A0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40033 SLICE_112_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40029 SLICE_112_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre20032 memreg__0__i5( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre20032 memreg__0__i6( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_114 ( input DI1, DI0, C1, A0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40003 SLICE_114_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40029 SLICE_114_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre20032 memreg__0__i3( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre20032 memreg__0__i4( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_116 ( input DI1, DI0, B1, C0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40031 SLICE_116_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 SLICE_116_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre20032 memreg__0__i1( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre20032 memreg__0__i2( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_118 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40034 n833_bdd_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40035 i109_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40034 ( input A, B, C, D, output Z );

  LUT4 #("0xB8CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40035 ( input A, B, C, D, output Z );

  LUT4 #("0xEEEE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_119 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40036 i261_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40037 n2049_bdd_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40036 ( input A, B, C, D, output Z );

  LUT4 #("0x5317") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40037 ( input A, B, C, D, output Z );

  LUT4 #("0xBA98") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_120 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40038 n2043_bdd_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40039 n833_bdd_4_lut_2( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40038 ( input A, B, C, D, output Z );

  LUT4 #("0xCCB8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40039 ( input A, B, C, D, output Z );

  LUT4 #("0xD8AA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_122 ( input D0, C0, B0, A0, output F0 );

  lut40040 i260_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40040 ( input A, B, C, D, output Z );

  LUT4 #("0x03ED") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_123 ( input D1, C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40041 i491_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40042 reduce_or_149_i1_2_lut_3_lut_3_lut( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40041 ( input A, B, C, D, output Z );

  LUT4 #("0x0D08") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40042 ( input A, B, C, D, output Z );

  LUT4 #("0xCCFC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_125 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40043 mux_150_i3_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40044 mux_152_i3_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40043 ( input A, B, C, D, output Z );

  LUT4 #("0x22E2") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40044 ( input A, B, C, D, output Z );

  LUT4 #("0xF0E2") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_126 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40045 i856_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40006 i848_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40045 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_128 ( input C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40046 i2_2_lut( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40047 i1_4_lut_adj_1( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40046 ( input A, B, C, D, output Z );

  LUT4 #("0xA0A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40047 ( input A, B, C, D, output Z );

  LUT4 #("0x00C8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_130 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40048 i1_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40049 i6_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40048 ( input A, B, C, D, output Z );

  LUT4 #("0x4000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40049 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFB") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_132 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40050 i3_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40051 i210_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40050 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40051 ( input A, B, C, D, output Z );

  LUT4 #("0xFF80") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_134 ( input D1, C1, B1, A1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40052 i942_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40053 i936_2_lut( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40052 ( input A, B, C, D, output Z );

  LUT4 #("0xFFC8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40053 ( input A, B, C, D, output Z );

  LUT4 #("0xA0A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_136 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40054 i428_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40055 i937_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40054 ( input A, B, C, D, output Z );

  LUT4 #("0xC840") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40055 ( input A, B, C, D, output Z );

  LUT4 #("0xEEEA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_138 ( input D0, C0, B0, A0, output F0 );

  lut40056 i276_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40056 ( input A, B, C, D, output Z );

  LUT4 #("0x3727") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_139 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40057 i277_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40058 i297_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40057 ( input A, B, C, D, output Z );

  LUT4 #("0x1563") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40058 ( input A, B, C, D, output Z );

  LUT4 #("0x052B") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_141 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40059 i1019_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40060 i498_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40059 ( input A, B, C, D, output Z );

  LUT4 #("0x1013") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40060 ( input A, B, C, D, output Z );

  LUT4 #("0xFF6E") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_143 ( input C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40061 i430_2_lut_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40062 equal_147_i3_2_lut_3_lut( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40061 ( input A, B, C, D, output Z );

  LUT4 #("0xFEFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40062 ( input A, B, C, D, output Z );

  LUT4 #("0xFCFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_146 ( input C1, B1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40063 i838_2_lut( .A(GNDI), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40064 i601_2_lut_3_lut( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40063 ( input A, B, C, D, output Z );

  LUT4 #("0xC0C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40064 ( input A, B, C, D, output Z );

  LUT4 #("0xA000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_150 ( output F0 );
  wire   GNDI;

  lut4 i2( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module SLICE_151 ( input D1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40065 pb0_I_0_1_lut( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40066 i1006_2_lut( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40065 ( input A, B, C, D, output Z );

  LUT4 #("0x00FF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40066 ( input A, B, C, D, output Z );

  LUT4 #("0x5F5F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_152 ( input DI1, C1, A1, D0, A0, CE, LSR, CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40007 i481_2_lut( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40067 usecond_cntr_max_I_76_2_lut( .A(A0), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre2 usecond_cntr_168__i9( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40067 ( input A, B, C, D, output Z );

  LUT4 #("0xAA00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_154 ( input D1, C1, A0, output F0, F1 );
  wire   GNDI;

  lut40068 i331_2_lut( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40069 i156_1_lut( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40068 ( input A, B, C, D, output Z );

  LUT4 #("0xFF0F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40069 ( input A, B, C, D, output Z );

  LUT4 #("0x5555") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module s8421_i0_i4 ( input DO0, CE, OUTCLK, output PADDO );
  wire   GNDI, DO0_dly, OUTCLK_dly, CE_dly;

  IOL_B_B s8421_i0_i4( .PADDI(GNDI), .DO1(GNDI), .DO0(DO0_dly), .CE(CE_dly), 
    .IOLTO(GNDI), .HOLD(GNDI), .INCLK(GNDI), .OUTCLK(OUTCLK_dly), 
    .PADDO(PADDO), .PADDT(), .DI1(), .DI0());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (OUTCLK => PADDO) = (0:0:0,0:0:0);
    $setuphold (posedge OUTCLK, DO0, 0:0:0, 0:0:0,,,, OUTCLK_dly, DO0_dly);
    $setuphold (posedge OUTCLK, CE, 0:0:0, 0:0:0,,,, OUTCLK_dly, CE_dly);
  endspecify

endmodule

module IOL_B_B ( input PADDI, DO1, DO0, CE, IOLTO, HOLD, INCLK, OUTCLK, 
    output PADDO, PADDT, DI1, DI0 );

  IOL_B INST10( .PADDI(PADDI), .DO1(DO1), .DO0(DO0), .CE(CE), .IOLTO(IOLTO), 
    .HOLD(HOLD), .INCLK(INCLK), .OUTCLK(OUTCLK), .PADDO(PADDO), .PADDT(PADDT), 
    .DI1(DI1), .DI0(DI0));
  defparam INST10.LATCHIN = "LATCH_REG";
  defparam INST10.DDROUT = "NO";
endmodule

module syncdcf77 ( input PADDI, INCLK, output DI0 );
  wire   GNDI, VCCI, PADDI_dly, INCLK_dly;

  IOL_B0070 syncdcf77( .PADDI(PADDI_dly), .DO1(GNDI), .DO0(GNDI), .CE(VCCI), 
    .IOLTO(GNDI), .HOLD(GNDI), .INCLK(INCLK_dly), .OUTCLK(GNDI), .PADDO(), 
    .PADDT(), .DI1(), .DI0(DI0));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (INCLK => DI0) = (0:0:0,0:0:0);
    $setuphold (posedge INCLK, PADDI, 0:0:0, 0:0:0,,,, INCLK_dly, PADDI_dly);
  endspecify

endmodule

module IOL_B0070 ( input PADDI, DO1, DO0, CE, IOLTO, HOLD, INCLK, OUTCLK, 
    output PADDO, PADDT, DI1, DI0 );

  IOL_B INST10( .PADDI(PADDI), .DO1(DO1), .DO0(DO0), .CE(CE), .IOLTO(IOLTO), 
    .HOLD(HOLD), .INCLK(INCLK), .OUTCLK(OUTCLK), .PADDO(PADDO), .PADDT(PADDT), 
    .DI1(DI1), .DI0(DI0));
  defparam INST10.LATCHIN = "NONE_REG";
  defparam INST10.DDROUT = "NO";
endmodule

module s8421_i0_i3 ( input DO0, CE, OUTCLK, output PADDO );
  wire   GNDI, DO0_dly, OUTCLK_dly, CE_dly;

  IOL_B_B s8421_i0_i3( .PADDI(GNDI), .DO1(GNDI), .DO0(DO0_dly), .CE(CE_dly), 
    .IOLTO(GNDI), .HOLD(GNDI), .INCLK(GNDI), .OUTCLK(OUTCLK_dly), 
    .PADDO(PADDO), .PADDT(), .DI1(), .DI0());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (OUTCLK => PADDO) = (0:0:0,0:0:0);
    $setuphold (posedge OUTCLK, DO0, 0:0:0, 0:0:0,,,, OUTCLK_dly, DO0_dly);
    $setuphold (posedge OUTCLK, CE, 0:0:0, 0:0:0,,,, OUTCLK_dly, CE_dly);
  endspecify

endmodule

module s8421_i0_i2 ( input DO0, CE, OUTCLK, output PADDO );
  wire   GNDI, DO0_dly, OUTCLK_dly, CE_dly;

  IOL_B_B s8421_i0_i2( .PADDI(GNDI), .DO1(GNDI), .DO0(DO0_dly), .CE(CE_dly), 
    .IOLTO(GNDI), .HOLD(GNDI), .INCLK(GNDI), .OUTCLK(OUTCLK_dly), 
    .PADDO(PADDO), .PADDT(), .DI1(), .DI0());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (OUTCLK => PADDO) = (0:0:0,0:0:0);
    $setuphold (posedge OUTCLK, DO0, 0:0:0, 0:0:0,,,, OUTCLK_dly, DO0_dly);
    $setuphold (posedge OUTCLK, CE, 0:0:0, 0:0:0,,,, OUTCLK_dly, CE_dly);
  endspecify

endmodule

module s8421_i0_i1 ( input DO0, CE, OUTCLK, output PADDO );
  wire   GNDI, DO0_dly, OUTCLK_dly, CE_dly;

  IOL_B_B s8421_i0_i1( .PADDI(GNDI), .DO1(GNDI), .DO0(DO0_dly), .CE(CE_dly), 
    .IOLTO(GNDI), .HOLD(GNDI), .INCLK(GNDI), .OUTCLK(OUTCLK_dly), 
    .PADDO(PADDO), .PADDT(), .DI1(), .DI0());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (OUTCLK => PADDO) = (0:0:0,0:0:0);
    $setuphold (posedge OUTCLK, DO0, 0:0:0, 0:0:0,,,, OUTCLK_dly, DO0_dly);
    $setuphold (posedge OUTCLK, CE, 0:0:0, 0:0:0,,,, OUTCLK_dly, CE_dly);
  endspecify

endmodule

module dcf77 ( output PADDI, input dcf77 );
  wire   GNDI;

  BB_B_B \dcf77_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(dcf77));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (dcf77 => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module BB_B_B ( input T_N, I, output O, inout B );

  BB_B INST10( .T_N(T_N), .I(I), .O(O), .B(B));
endmodule

module pb0 ( output PADDI, input pb0 );
  wire   GNDI;

  BB_B_B \pb0_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(pb0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (pb0 => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module clk ( output PADDI, input clk );
  wire   GNDI;

  BB_B_B \clk_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(clk));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (clk => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module s8421_0_ ( input PADDO, output s84210 );
  wire   VCCI;

  BB_B_B \s8421_pad[0].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(s84210));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => s84210) = (0:0:0,0:0:0);
  endspecify

endmodule

module s8421_1_ ( input PADDO, output s84211 );
  wire   VCCI;

  BB_B_B \s8421_pad[1].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(s84211));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => s84211) = (0:0:0,0:0:0);
  endspecify

endmodule

module s8421_2_ ( input PADDO, output s84212 );
  wire   VCCI;

  BB_B_B \s8421_pad[2].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(s84212));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => s84212) = (0:0:0,0:0:0);
  endspecify

endmodule

module s8421_3_ ( input PADDO, output s84213 );
  wire   VCCI;

  BB_B_B \s8421_pad[3].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(s84213));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => s84213) = (0:0:0,0:0:0);
  endspecify

endmodule

module select7seg_0_ ( input PADDO, output select7seg0 );
  wire   VCCI;

  BB_B_B \select7seg_pad[0].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(select7seg0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => select7seg0) = (0:0:0,0:0:0);
  endspecify

endmodule

module select7seg_1_ ( input PADDO, output select7seg1 );
  wire   VCCI;

  BB_B_B \select7seg_pad[1].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(select7seg1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => select7seg1) = (0:0:0,0:0:0);
  endspecify

endmodule

module select7seg_2_ ( input PADDO, output select7seg2 );
  wire   VCCI;

  BB_B_B \select7seg_pad[2].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(select7seg2));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => select7seg2) = (0:0:0,0:0:0);
  endspecify

endmodule

module select7seg_3_ ( input PADDO, output select7seg3 );
  wire   VCCI;

  BB_B_B \select7seg_pad[3].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(select7seg3));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => select7seg3) = (0:0:0,0:0:0);
  endspecify

endmodule

module segment_0_ ( input PADDO, output segment0 );
  wire   VCCI;

  BB_B_B \segment_pad[0].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(segment0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => segment0) = (0:0:0,0:0:0);
  endspecify

endmodule

module segment_1_ ( input PADDO, output segment1 );
  wire   VCCI;

  BB_B_B \segment_pad[1].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(segment1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => segment1) = (0:0:0,0:0:0);
  endspecify

endmodule

module segment_2_ ( input PADDO, output segment2 );
  wire   VCCI;

  BB_B_B \segment_pad[2].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(segment2));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => segment2) = (0:0:0,0:0:0);
  endspecify

endmodule

module segment_3_ ( input PADDO, output segment3 );
  wire   VCCI;

  BB_B_B \segment_pad[3].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(segment3));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => segment3) = (0:0:0,0:0:0);
  endspecify

endmodule

module segment_4_ ( input PADDO, output segment4 );
  wire   VCCI;

  BB_B_B \segment_pad[4].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(segment4));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => segment4) = (0:0:0,0:0:0);
  endspecify

endmodule

module segment_5_ ( input PADDO, output segment5 );
  wire   VCCI;

  BB_B_B \segment_pad[5].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(segment5));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => segment5) = (0:0:0,0:0:0);
  endspecify

endmodule

module segment_6_ ( input PADDO, output segment6 );
  wire   VCCI;

  BB_B_B \segment_pad[6].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(segment6));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => segment6) = (0:0:0,0:0:0);
  endspecify

endmodule

module sdatabit ( input PADDO, output sdatabit );
  wire   VCCI;

  BB_B_B \sdatabit_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(sdatabit));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => sdatabit) = (0:0:0,0:0:0);
  endspecify

endmodule

module sframe ( input PADDO, output sframe );
  wire   VCCI;

  BB_B_B \sframe_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(sframe));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => sframe) = (0:0:0,0:0:0);
  endspecify

endmodule

module sdcf77 ( input PADDO, output sdcf77 );
  wire   VCCI;

  BB_B_B \sdcf77_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(sdcf77));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => sdcf77) = (0:0:0,0:0:0);
  endspecify

endmodule

module pinms ( input PADDO, output pinms );
  wire   VCCI;

  BB_B_B \pinms_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(pinms));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => pinms) = (0:0:0,0:0:0);
  endspecify

endmodule
